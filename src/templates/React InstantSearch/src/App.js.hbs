import React from 'react';
import algoliasearch from 'algoliasearch/lite';
import {
  InstantSearch,
  Hits,
  SearchBox,
  {{#if flags.dynamicWidgets}}
  Configure,
  DynamicWidgets,
  RefinementList
  {{else}}
  {{#if attributesForFaceting}}
  RefinementList,
  {{/if}}
  {{/if}}
  Pagination,
  {{#if attributesToDisplay}}
  Highlight,
  {{/if}}
} from 'react-instantsearch-dom';
import PropTypes from 'prop-types';
import './App.css';

const searchClient = algoliasearch('{{appId}}', '{{apiKey}}');

function App() {
  return (
    <div>
      <header className="header">
        <h1 className="header-title">
          <a href="/">{{name}}</a>
        </h1>
        <p className="header-subtitle">
          using{' '}
          <a href="https://github.com/algolia/react-instantsearch">
            React InstantSearch
          </a>
        </p>
      </header>

      <div className="container">
        <InstantSearch searchClient={searchClient} indexName="{{indexName}}">
          <div className="search-panel">
            <div className="search-panel__filters">
              {{#if flags.dynamicWidgets}}
              <Configure facets={['*']} maxValuesPerFacet={20} />
              <DynamicWidgets fallbackWidget={RefinementList}>
                {{#each attributesForFaceting}}
                <RefinementList attribute="{{this}}" />
                {{/each}}
              </DynamicWidgets>
              {{else}}
              {{#each attributesForFaceting}}
              <RefinementList attribute="{{this}}" />
              {{/each}}
              {{/if}}
            </div>

            <div className="search-panel__results">
              <SearchBox
                className="searchbox"
                translations=\{{
                  placeholder: '{{searchPlaceholder}}',
                }}
              />
              <Hits hitComponent={Hit} />

              <div className="pagination">
                <Pagination />
              </div>
            </div>
          </div>
        </InstantSearch>
      </div>
    </div>
  );
}

function Hit(props) {
  return (
    <article>
      {{#if attributesToDisplay}}
      <h1>
        <Highlight attribute="{{attributesToDisplay.[0]}}" hit={props.hit} />
      </h1>
      {{#each attributesToDisplay}}
      {{#unless @first}}
      <p>
        <Highlight attribute="{{this}}" hit={props.hit} />
      </p>
      {{/unless}}
      {{/each}}
      {{else}}
      <p>
        <code>{JSON.stringify(props.hit).slice(0, 100)}...</code>
      </p>
      {{/if}}
    </article>
  );
}

Hit.propTypes = {
  hit: PropTypes.object.isRequired,
};

export default App;
