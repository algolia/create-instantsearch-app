// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Templates Angular InstantSearch File content: .gitignore 1`] = `
"node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log
dist/"
`;

exports[`Templates Angular InstantSearch File content: README.md 1`] = `
"# angular-instantsearch-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates Angular InstantSearch File content: angular.json 1`] = `
"{
  \\"$schema\\": \\"./node_modules/@angular/cli/lib/config/schema.json\\",
  \\"version\\": 1,
  \\"newProjectRoot\\": \\"projects\\",
  \\"projects\\": {
    \\"angular-instantsearch-app\\": {
      \\"root\\": \\"\\",
      \\"sourceRoot\\": \\"src\\",
      \\"projectType\\": \\"application\\",
      \\"prefix\\": \\"app\\",
      \\"schematics\\": {},
      \\"architect\\": {
        \\"build\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:browser\\",
          \\"options\\": {
            \\"outputPath\\": \\"dist/angular-instantsearch-app\\",
            \\"index\\": \\"src/index.html\\",
            \\"main\\": \\"src/main.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"src/tsconfig.app.json\\",
            \\"assets\\": [
              \\"src/favicon.png\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"node_modules/angular-instantsearch/bundles/instantsearch.min.css\\",
              \\"node_modules/angular-instantsearch/bundles/instantsearch-theme-algolia.min.css\\",
              \\"src/styles.css\\"
            ],
            \\"scripts\\": []
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"fileReplacements\\": [
                {
                  \\"replace\\": \\"src/environments/environment.ts\\",
                  \\"with\\": \\"src/environments/environment.prod.ts\\"
                }
              ],
              \\"optimization\\": true,
              \\"outputHashing\\": \\"all\\",
              \\"sourceMap\\": false,
              \\"extractCss\\": true,
              \\"namedChunks\\": false,
              \\"aot\\": true,
              \\"extractLicenses\\": true,
              \\"vendorChunk\\": false,
              \\"buildOptimizer\\": true
            }
          }
        },
        \\"serve\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:dev-server\\",
          \\"options\\": {
            \\"browserTarget\\": \\"angular-instantsearch-app:build\\"
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"browserTarget\\": \\"angular-instantsearch-app:build:production\\"
            }
          }
        },
        \\"extract-i18n\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:extract-i18n\\",
          \\"options\\": {
            \\"browserTarget\\": \\"angular-instantsearch-app:build\\"
          }
        },
        \\"test\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:karma\\",
          \\"options\\": {
            \\"main\\": \\"src/test.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"src/tsconfig.spec.json\\",
            \\"karmaConfig\\": \\"src/karma.conf.js\\",
            \\"styles\\": [
              \\"src/styles.css\\"
            ],
            \\"scripts\\": [],
            \\"assets\\": [
              \\"src/favicon.png\\",
              \\"src/assets\\"
            ]
          }
        },
        \\"lint\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:tslint\\",
          \\"options\\": {
            \\"tsConfig\\": [
              \\"src/tsconfig.app.json\\",
              \\"src/tsconfig.spec.json\\"
            ],
            \\"exclude\\": [
              \\"**/node_modules/**\\"
            ]
          }
        }
      }
    },
    \\"angular-instantsearch-app-e2e\\": {
      \\"root\\": \\"e2e/\\",
      \\"projectType\\": \\"application\\",
      \\"architect\\": {
        \\"e2e\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:protractor\\",
          \\"options\\": {
            \\"protractorConfig\\": \\"e2e/protractor.conf.js\\",
            \\"devServerTarget\\": \\"angular-instantsearch-app:serve\\"
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"devServerTarget\\": \\"angular-instantsearch-app:serve:production\\"
            }
          }
        },
        \\"lint\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:tslint\\",
          \\"options\\": {
            \\"tsConfig\\": \\"e2e/tsconfig.e2e.json\\",
            \\"exclude\\": [
              \\"**/node_modules/**\\"
            ]
          }
        }
      }
    }
  },
  \\"defaultProject\\": \\"angular-instantsearch-app\\"
}"
`;

exports[`Templates Angular InstantSearch File content: e2e/protractor.conf.js 1`] = `
"// Protractor configuration file, see link for more information
// https://github.com/angular/protractor/blob/master/lib/config.ts

const { SpecReporter } = require('jasmine-spec-reporter');

exports.config = {
  allScriptsTimeout: 11000,
  specs: [
    './src/**/*.e2e-spec.ts'
  ],
  capabilities: {
    'browserName': 'chrome'
  },
  directConnect: true,
  baseUrl: 'http://localhost:4200/',
  framework: 'jasmine',
  jasmineNodeOpts: {
    showColors: true,
    defaultTimeoutInterval: 30000,
    print: function() {}
  },
  onPrepare() {
    require('ts-node').register({
      project: require('path').join(__dirname, './tsconfig.e2e.json')
    });
    jasmine.getEnv().addReporter(new SpecReporter({ spec: { displayStacktrace: true } }));
  }
};"
`;

exports[`Templates Angular InstantSearch File content: e2e/src/app.e2e-spec.ts 1`] = `
"import { AppPage } from './app.po';

describe('workspace-project App', () => {
  let page: AppPage;

  beforeEach(() => {
    page = new AppPage();
  });

  it('should display welcome message', () => {
    page.navigateTo();
    expect(page.getParagraphText()).toEqual('Welcome to angular-instantsearch!');
  });
});"
`;

exports[`Templates Angular InstantSearch File content: e2e/src/app.po.ts 1`] = `
"import { browser, by, element } from 'protractor';

export class AppPage {
  navigateTo() {
    return browser.get('/');
  }

  getParagraphText() {
    return element(by.css('app-root h1')).getText();
  }
}"
`;

exports[`Templates Angular InstantSearch File content: e2e/tsconfig.e2e.json 1`] = `
"{
  \\"extends\\": \\"../tsconfig.json\\",
  \\"compilerOptions\\": {
    \\"outDir\\": \\"../out-tsc/app\\",
    \\"module\\": \\"commonjs\\",
    \\"target\\": \\"es5\\",
    \\"types\\": [
      \\"jasmine\\",
      \\"jasminewd2\\",
      \\"node\\"
    ]
  }
}"
`;

exports[`Templates Angular InstantSearch File content: package.json 1`] = `
"{
  \\"name\\": \\"angular-instantsearch-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"ng\\": \\"ng\\",
    \\"start\\": \\"ng serve --port 3000\\",
    \\"build\\": \\"ng build\\",
    \\"test\\": \\"ng test\\",
    \\"lint\\": \\"ng lint\\",
    \\"e2e\\": \\"ng e2e\\"
  },
  \\"dependencies\\": {
    \\"@angular/animations\\": \\"6.0.6\\",
    \\"@angular/common\\": \\"6.0.6\\",
    \\"@angular/compiler\\": \\"6.0.6\\",
    \\"@angular/core\\": \\"6.0.6\\",
    \\"@angular/forms\\": \\"6.0.6\\",
    \\"@angular/http\\": \\"6.0.6\\",
    \\"@angular/platform-browser\\": \\"6.0.6\\",
    \\"@angular/platform-browser-dynamic\\": \\"6.0.6\\",
    \\"@angular/router\\": \\"6.0.6\\",
    \\"angular-instantsearch\\": \\"1.0.0\\",
    \\"core-js\\": \\"2.5.7\\",
    \\"rxjs\\": \\"6.2.1\\",
    \\"zone.js\\": \\"0.8.26\\"
  },
  \\"devDependencies\\": {
    \\"@angular/compiler-cli\\": \\"6.0.6\\",
    \\"@angular-devkit/build-angular\\": \\"0.6.8\\",
    \\"typescript\\": \\"2.7.2\\",
    \\"@angular/cli\\": \\"6.0.8\\",
    \\"@angular/language-service\\": \\"6.0.6\\",
    \\"@types/jasmine\\": \\"2.8.8\\",
    \\"@types/jasminewd2\\": \\"2.0.3\\",
    \\"@types/node\\": \\"8.9.5\\",
    \\"codelyzer\\": \\"4.2.1\\",
    \\"jasmine-core\\": \\"2.99.1\\",
    \\"jasmine-spec-reporter\\": \\"4.2.1\\",
    \\"karma\\": \\"1.7.1\\",
    \\"karma-chrome-launcher\\": \\"2.2.0\\",
    \\"karma-coverage-istanbul-reporter\\": \\"2.0.1\\",
    \\"karma-jasmine\\": \\"1.1.2\\",
    \\"karma-jasmine-html-reporter\\": \\"0.2.2\\",
    \\"protractor\\": \\"5.3.2\\",
    \\"ts-node\\": \\"5.0.1\\",
    \\"tslint\\": \\"5.9.1\\"
  }
}"
`;

exports[`Templates Angular InstantSearch File content: src/app/app.component.css 1`] = `
".header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(to right, #c3002f, #dd0031);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.search-panel {
  display: flex;
}

.search-panel__filters {
  flex: 1;
}

.search-panel__results {
  flex: 3;
}

.searchbox {
  margin-bottom: 2rem;
}

.pagination {
  margin: 2rem auto;
  text-align: center;
}"
`;

exports[`Templates Angular InstantSearch File content: src/app/app.component.html 1`] = `
"<header class=\\"header\\">
  <h1 class=\\"header-title\\">
    <a href=\\"/\\">angular-instantsearch-app</a>
  </h1>
  <p class=\\"header-subtitle\\">
    using
    <a href=\\"https://github.com/algolia/angular-instantsearch\\">
      Angular InstantSearch
    </a>
  </p>
</header>

<div class=\\"container\\">
  <ais-instantsearch [config]=\\"config\\">
    <div class=\\"search-panel\\">
      <div class=\\"search-panel__filters\\">
        <ais-refinement-list attribute=\\"facet1\\"></ais-refinement-list>
        <ais-refinement-list attribute=\\"facet2\\"></ais-refinement-list>
      </div>

      <div class=\\"search-panel__results\\">
        <div class=\\"searchbox\\">
          <ais-search-box placeholder=\\"Search placeholder\\"></ais-search-box>
        </div>

        <ais-hits></ais-hits>

        <div class=\\"pagination\\">
          <ais-pagination></ais-pagination>
        </div>
      </div>

    </div>
  </ais-instantsearch>
</div>"
`;

exports[`Templates Angular InstantSearch File content: src/app/app.component.spec.ts 1`] = `
"import { TestBed, async } from '@angular/core/testing';
import { AppComponent } from './app.component';
describe('AppComponent', () => {
  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [
        AppComponent
      ],
    }).compileComponents();
  }));
  it('should create the app', async(() => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.debugElement.componentInstance;
    expect(app).toBeTruthy();
  }));
});"
`;

exports[`Templates Angular InstantSearch File content: src/app/app.component.ts 1`] = `
"import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  config = {
    appId: 'appId',
    apiKey: 'apiKey',
    indexName: 'indexName',
  };
}"
`;

exports[`Templates Angular InstantSearch File content: src/app/app.module.ts 1`] = `
"import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { NgAisModule } from 'angular-instantsearch';

import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    NgAisModule.forRoot(),
    BrowserModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }"
`;

exports[`Templates Angular InstantSearch File content: src/assets/.gitkeep 1`] = `""`;

exports[`Templates Angular InstantSearch File content: src/browserslist 1`] = `
"# This file is currently used by autoprefixer to adjust CSS to support the below specified browsers
# For additional information regarding the format and rule options, please see:
# https://github.com/browserslist/browserslist#queries
# For IE 9-11 support, please uncomment the last line of the file and adjust as needed
> 0.5%
last 2 versions
Firefox ESR
not dead
# IE 9-11"
`;

exports[`Templates Angular InstantSearch File content: src/environments/environment.prod.ts 1`] = `
"export const environment = {
  production: true
};"
`;

exports[`Templates Angular InstantSearch File content: src/environments/environment.ts 1`] = `
"// This file can be replaced during build by using the \`fileReplacements\` array.
// \`ng build ---prod\` replaces \`environment.ts\` with \`environment.prod.ts\`.
// The list of file replacements can be found in \`angular.json\`.

export const environment = {
  production: false
};

/*
 * In development mode, to ignore zone related error stack frames such as
 * \`zone.run\`, \`zoneDelegate.invokeTask\` for easier debugging, you can
 * import the following file, but please comment it out in production mode
 * because it will have performance impact when throw error
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI."
`;

exports[`Templates Angular InstantSearch File content: src/index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"manifest.json\\">
  <link rel=\\"shortcut icon\\" href=\\"favicon.png\\">

  <title>angular-instantsearch-app</title>
</head>

<body>
  <app-root></app-root>
</body>

</html>"
`;

exports[`Templates Angular InstantSearch File content: src/karma.conf.js 1`] = `
"// Karma configuration file, see link for more information
// https://karma-runner.github.io/1.0/config/configuration-file.html

module.exports = function (config) {
  config.set({
    basePath: '',
    frameworks: ['jasmine', '@angular-devkit/build-angular'],
    plugins: [
      require('karma-jasmine'),
      require('karma-chrome-launcher'),
      require('karma-jasmine-html-reporter'),
      require('karma-coverage-istanbul-reporter'),
      require('@angular-devkit/build-angular/plugins/karma')
    ],
    client: {
      clearContext: false // leave Jasmine Spec Runner output visible in browser
    },
    coverageIstanbulReporter: {
      dir: require('path').join(__dirname, '../coverage'),
      reports: ['html', 'lcovonly'],
      fixWebpackSourcePaths: true
    },
    reporters: ['progress', 'kjhtml'],
    port: 9876,
    colors: true,
    logLevel: config.LOG_INFO,
    autoWatch: true,
    browsers: ['Chrome'],
    singleRun: false
  });
};"
`;

exports[`Templates Angular InstantSearch File content: src/main.ts 1`] = `
"import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

import { AppModule } from './app/app.module';
import { environment } from './environments/environment';

if (environment.production) {
  enableProdMode();
}

platformBrowserDynamic().bootstrapModule(AppModule)
  .catch(err => console.log(err));"
`;

exports[`Templates Angular InstantSearch File content: src/manifest.json 1`] = `
"{
  \\"short_name\\": \\"angular-instantsearch-app\\",
  \\"name\\": \\"Create InstantSearch App Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates Angular InstantSearch File content: src/polyfills.ts 1`] = `
"/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * This file is divided into 2 sections:
 *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
 *      file.
 *
 * The current setup is for so-called \\"evergreen\\" browsers; the last versions of browsers that
 * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
 * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
 *
 * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html
 */

/***************************************************************************************************
 * BROWSER POLYFILLS
 */

/** IE9, IE10 and IE11 requires all of the following polyfills. **/
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/weak-map';
// import 'core-js/es6/set';

/** IE10 and IE11 requires the following for NgClass support on SVG elements */
// import 'classlist.js';  // Run \`npm install --save classlist.js\`.

/** IE10 and IE11 requires the following for the Reflect API. */
// import 'core-js/es6/reflect';


/** Evergreen browsers require these. **/
// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.
import 'core-js/es7/reflect';


/**
 * Web Animations \`@angular/platform-browser/animations\`
 * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.
 * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).
 **/
// import 'web-animations-js';  // Run \`npm install --save web-animations-js\`.

/**
 * By default, zone.js will patch all possible macroTask and DomEvents
 * user can disable parts of macroTask/DomEvents patch by setting following flags
 */

 // (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame
 // (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick
 // (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames

 /*
 * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js
 * with the following flag, it will bypass \`zone.js\` patch for IE/Edge
 */
// (window as any).__Zone_enable_cross_context_check = true;

/***************************************************************************************************
 * Zone JS is required by default for Angular itself.
 */
import 'zone.js/dist/zone';  // Included with Angular CLI.



/***************************************************************************************************
 * APPLICATION IMPORTS
 */

// See: https://github.com/algolia/angular-instantsearch/issues/90
(window as any).process = {
  env: { DEBUG: undefined },
};"
`;

exports[`Templates Angular InstantSearch File content: src/styles.css 1`] = `
"/* You can add global styles to this file, and also import other style files */
body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}"
`;

exports[`Templates Angular InstantSearch File content: src/test.ts 1`] = `
"// This file is required by karma.conf.js and loads recursively all the .spec and framework files

import 'zone.js/dist/zone-testing';
import { getTestBed } from '@angular/core/testing';
import {
  BrowserDynamicTestingModule,
  platformBrowserDynamicTesting
} from '@angular/platform-browser-dynamic/testing';

declare const require: any;

// First, initialize the Angular testing environment.
getTestBed().initTestEnvironment(
  BrowserDynamicTestingModule,
  platformBrowserDynamicTesting()
);
// Then we find all the tests.
const context = require.context('./', true, /\\\\.spec\\\\.ts$/);
// And load the modules.
context.keys().map(context);"
`;

exports[`Templates Angular InstantSearch File content: src/tsconfig.app.json 1`] = `
"{
  \\"extends\\": \\"../tsconfig.json\\",
  \\"compilerOptions\\": {
    \\"outDir\\": \\"../out-tsc/app\\",
    \\"module\\": \\"es2015\\",
    \\"types\\": []
  },
  \\"exclude\\": [
    \\"src/test.ts\\",
    \\"**/*.spec.ts\\"
  ]
}"
`;

exports[`Templates Angular InstantSearch File content: src/tsconfig.spec.json 1`] = `
"{
  \\"extends\\": \\"../tsconfig.json\\",
  \\"compilerOptions\\": {
    \\"outDir\\": \\"../out-tsc/spec\\",
    \\"module\\": \\"commonjs\\",
    \\"types\\": [
      \\"jasmine\\",
      \\"node\\"
    ]
  },
  \\"files\\": [
    \\"test.ts\\",
    \\"polyfills.ts\\"
  ],
  \\"include\\": [
    \\"**/*.spec.ts\\",
    \\"**/*.d.ts\\"
  ]
}"
`;

exports[`Templates Angular InstantSearch File content: src/tslint.json 1`] = `
"{
    \\"extends\\": \\"../tslint.json\\",
    \\"rules\\": {
        \\"directive-selector\\": [
            true,
            \\"attribute\\",
            \\"app\\",
            \\"camelCase\\"
        ],
        \\"component-selector\\": [
            true,
            \\"element\\",
            \\"app\\",
            \\"kebab-case\\"
        ]
    }
}"
`;

exports[`Templates Angular InstantSearch File content: tsconfig.json 1`] = `
"{
  \\"compileOnSave\\": false,
  \\"compilerOptions\\": {
    \\"baseUrl\\": \\"./\\",
    \\"outDir\\": \\"./dist/out-tsc\\",
    \\"sourceMap\\": true,
    \\"declaration\\": false,
    \\"moduleResolution\\": \\"node\\",
    \\"emitDecoratorMetadata\\": true,
    \\"experimentalDecorators\\": true,
    \\"target\\": \\"es5\\",
    \\"typeRoots\\": [
      \\"node_modules/@types\\"
    ],
    \\"lib\\": [
      \\"es2017\\",
      \\"dom\\"
    ]
  }
}"
`;

exports[`Templates Angular InstantSearch File content: tslint.json 1`] = `
"{
  \\"rulesDirectory\\": [
    \\"node_modules/codelyzer\\"
  ],
  \\"rules\\": {
    \\"arrow-return-shorthand\\": true,
    \\"callable-types\\": true,
    \\"class-name\\": true,
    \\"comment-format\\": [
      true,
      \\"check-space\\"
    ],
    \\"curly\\": true,
    \\"deprecation\\": {
      \\"severity\\": \\"warn\\"
    },
    \\"eofline\\": true,
    \\"forin\\": true,
    \\"import-blacklist\\": [
      true,
      \\"rxjs/Rx\\"
    ],
    \\"import-spacing\\": true,
    \\"indent\\": [
      true,
      \\"spaces\\"
    ],
    \\"interface-over-type-literal\\": true,
    \\"label-position\\": true,
    \\"max-line-length\\": [
      true,
      140
    ],
    \\"member-access\\": false,
    \\"member-ordering\\": [
      true,
      {
        \\"order\\": [
          \\"static-field\\",
          \\"instance-field\\",
          \\"static-method\\",
          \\"instance-method\\"
        ]
      }
    ],
    \\"no-arg\\": true,
    \\"no-bitwise\\": true,
    \\"no-console\\": [
      true,
      \\"debug\\",
      \\"info\\",
      \\"time\\",
      \\"timeEnd\\",
      \\"trace\\"
    ],
    \\"no-construct\\": true,
    \\"no-debugger\\": true,
    \\"no-duplicate-super\\": true,
    \\"no-empty\\": false,
    \\"no-empty-interface\\": true,
    \\"no-eval\\": true,
    \\"no-inferrable-types\\": [
      true,
      \\"ignore-params\\"
    ],
    \\"no-misused-new\\": true,
    \\"no-non-null-assertion\\": true,
    \\"no-shadowed-variable\\": true,
    \\"no-string-literal\\": false,
    \\"no-string-throw\\": true,
    \\"no-switch-case-fall-through\\": true,
    \\"no-trailing-whitespace\\": true,
    \\"no-unnecessary-initializer\\": true,
    \\"no-unused-expression\\": true,
    \\"no-use-before-declare\\": true,
    \\"no-var-keyword\\": true,
    \\"object-literal-sort-keys\\": false,
    \\"one-line\\": [
      true,
      \\"check-open-brace\\",
      \\"check-catch\\",
      \\"check-else\\",
      \\"check-whitespace\\"
    ],
    \\"prefer-const\\": true,
    \\"quotemark\\": [
      true,
      \\"single\\"
    ],
    \\"radix\\": true,
    \\"semicolon\\": [
      true,
      \\"always\\"
    ],
    \\"triple-equals\\": [
      true,
      \\"allow-null-check\\"
    ],
    \\"typedef-whitespace\\": [
      true,
      {
        \\"call-signature\\": \\"nospace\\",
        \\"index-signature\\": \\"nospace\\",
        \\"parameter\\": \\"nospace\\",
        \\"property-declaration\\": \\"nospace\\",
        \\"variable-declaration\\": \\"nospace\\"
      }
    ],
    \\"unified-signatures\\": true,
    \\"variable-name\\": false,
    \\"whitespace\\": [
      true,
      \\"check-branch\\",
      \\"check-decl\\",
      \\"check-operator\\",
      \\"check-separator\\",
      \\"check-type\\"
    ],
    \\"no-output-on-prefix\\": true,
    \\"use-input-property-decorator\\": true,
    \\"use-output-property-decorator\\": true,
    \\"use-host-property-decorator\\": true,
    \\"no-input-rename\\": true,
    \\"no-output-rename\\": true,
    \\"use-life-cycle-interface\\": true,
    \\"use-pipe-transform-interface\\": true,
    \\"component-class-suffix\\": true,
    \\"directive-class-suffix\\": true
  }
}"
`;

exports[`Templates Angular InstantSearch Folder structure: contains the right files 1`] = `
Array [
  ".gitignore",
  "README.md",
  "angular.json",
  "e2e/protractor.conf.js",
  "e2e/src/app.e2e-spec.ts",
  "e2e/src/app.po.ts",
  "e2e/tsconfig.e2e.json",
  "package.json",
  "src/app/app.component.css",
  "src/app/app.component.html",
  "src/app/app.component.spec.ts",
  "src/app/app.component.ts",
  "src/app/app.module.ts",
  "src/assets/.gitkeep",
  "src/browserslist",
  "src/environments/environment.prod.ts",
  "src/environments/environment.ts",
  "src/favicon.png",
  "src/index.html",
  "src/karma.conf.js",
  "src/main.ts",
  "src/manifest.json",
  "src/polyfills.ts",
  "src/styles.css",
  "src/test.ts",
  "src/tsconfig.app.json",
  "src/tsconfig.spec.json",
  "src/tslint.json",
  "tsconfig.json",
  "tslint.json",
]
`;

exports[`Templates Autocomplete.js File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates Autocomplete.js File content: .eslintignore 1`] = `
"/node_modules
/dist
/.cache"
`;

exports[`Templates Autocomplete.js File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia',
};"
`;

exports[`Templates Autocomplete.js File content: .gitignore 1`] = `
"# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules

# testing
/coverage

# production
/dist
/.cache

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*"
`;

exports[`Templates Autocomplete.js File content: .prettierrc 1`] = `
"{
  \\"singleQuote\\": true,
  \\"proseWrap\\": \\"never\\",
  \\"trailingComma\\": \\"es5\\"
}"
`;

exports[`Templates Autocomplete.js File content: README.md 1`] = `
"# autocomplete.js-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates Autocomplete.js File content: index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"./manifest.webmanifest\\">
  <link rel=\\"shortcut icon\\" href=\\"./favicon.png\\">

  <link rel=\\"stylesheet\\" href=\\"./src/index.css\\">
  <link rel=\\"stylesheet\\" href=\\"./src/app.css\\">

  <title>autocomplete.js-app</title>
</head>

<body>
  <header class=\\"header\\">
    <h1 class=\\"header-title\\">
      <a href=\\"/\\">autocomplete.js-app</a>
    </h1>
    <p class=\\"header-subtitle\\">using
      <a href=\\"https://github.com/algolia/autocomplete.js\\">Autocomplete.js</a>
    </p>
  </header>

  <div class=\\"container\\">
    <div class=\\"container-app\\">
      <div id=\\"searchBox\\">
        <form role=\\"search\\">
          <input type=\\"search\\" placeholder=\\"Search placeholder\\" />
        </form>
      </div>
    </div>
  </div>

  <script src=\\"./src/app.js\\"></script>
</body>

</html>"
`;

exports[`Templates Autocomplete.js File content: manifest.webmanifest 1`] = `
"{
  \\"short_name\\": \\"autocomplete.js-app\\",
  \\"name\\": \\"autocomplete.js-app Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"./index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates Autocomplete.js File content: package.json 1`] = `
"{
  \\"name\\": \\"autocomplete.js-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"start\\": \\"parcel index.html --port 3000\\",
    \\"build\\": \\"parcel build index.html\\",
    \\"lint\\": \\"eslint .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"dependencies\\": {
    \\"algoliasearch\\": \\"3.29.0\\",
    \\"autocomplete.js\\": \\"1.0.0\\"
  },
  \\"devDependencies\\": {
    \\"babel-eslint\\": \\"8.2.5\\",
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"parcel-bundler\\": \\"1.9.4\\",
    \\"prettier\\": \\"1.13.7\\"
  }
}"
`;

exports[`Templates Autocomplete.js File content: src/app.css 1`] = `
".header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(73deg, #3369e7, #1cc7d0);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

#searchBox {
  margin-bottom: 2rem;
}

.algolia-autocomplete {
  width: 100%;
}

.algolia-autocomplete .aa-input,
.algolia-autocomplete .aa-hint {
  width: 100%;
}

.algolia-autocomplete .aa-input {
  padding: 12px;
  font: inherit;
  border-radius: 2px;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.16);
}

.algolia-autocomplete .aa-hint {
  color: #999;
}

.algolia-autocomplete .aa-dropdown-menu {
  width: 100%;
  background-color: #fff;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.16);
}

.algolia-autocomplete .aa-dropdown-menu .aa-suggestion {
  font-weight: bold;
  cursor: pointer;
  padding: 12px;
}

.algolia-autocomplete .aa-dropdown-menu .aa-suggestion em {
  font-weight: normal;
  font-style: normal;
}

.algolia-autocomplete .aa-dropdown-menu .aa-suggestion.aa-cursor {
  background-color: rgba(150, 150, 150, 0.16);
}"
`;

exports[`Templates Autocomplete.js File content: src/app.js 1`] = `
"import algoliasearch from 'algoliasearch';
import autocomplete from 'autocomplete.js';

const client = algoliasearch('appId', 'apiKey');
const index = client.initIndex('indexName');

const $hits = document.querySelector('#hits');

autocomplete('#searchBox input[type=search]', { hint: false }, [
  {
    source: autocomplete.sources.hits(index, { hitsPerPage: 5 }),
    displayKey: 'mainAttribute',
    templates: {
      suggestion(suggestion) {
        return suggestion._highlightResult.mainAttribute.value;
      },
    },
  },
]).on('autocomplete:selected', (event, suggestion, dataset) => {
  console.log({ suggestion, dataset });
});"
`;

exports[`Templates Autocomplete.js File content: src/index.css 1`] = `
"body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}"
`;

exports[`Templates Autocomplete.js Folder structure: contains the right files 1`] = `
Array [
  ".editorconfig",
  ".eslintignore",
  ".eslintrc.js",
  ".gitignore",
  ".prettierrc",
  "README.md",
  "favicon.png",
  "index.html",
  "manifest.webmanifest",
  "package.json",
  "src/app.css",
  "src/app.js",
  "src/index.css",
]
`;

exports[`Templates InstantSearch Android File content: .gitignore 1`] = `
"# IDE Files
*.iml
.idea/*
projectFilesBackup

# Build
.gradle
/.idea/workspace.xml
/.idea/libraries
/build
/captures

# Local setup
/local.properties

# OS Files
.DS_Store"
`;

exports[`Templates InstantSearch Android File content: app/.gitignore 1`] = `"/build"`;

exports[`Templates InstantSearch Android File content: app/build.gradle 1`] = `
"apply plugin: 'com.android.application'

android {
    dataBinding.enabled true
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId \\"com.example.instantsearch.app\\"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName \\"1.0\\"
        testInstrumentationRunner \\"android.support.test.runner.AndroidJUnitRunner\\"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.example:instantsearch-android:1.12.0'
    testImplementation 'junit:junit:4.12'
}"
`;

exports[`Templates InstantSearch Android File content: app/proguard-rules.pro 1`] = `
"# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in /Users/pln/Library/Android/sdk/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the proguardFiles
# directive in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile"
`;

exports[`Templates InstantSearch Android File content: app/src/androidTest/java/com/algolia/instantsearch/mvp/ExampleInstrumentedTest.java 1`] = `
"package com.example.instantsearch.app;

import android.content.Context;
import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumentation test, which will execute on an Android device.
 *
 * @see <a href=\\"http://d.android.com/tools/testing\\">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() throws Exception {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getTargetContext();

        assertEquals(\\"com.example.instantsearch.app\\", appContext.getPackageName());
    }
}"
`;

exports[`Templates InstantSearch Android File content: app/src/main/AndroidManifest.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<manifest package=\\"com.example.instantsearch.app\\"
          xmlns:android=\\"http://schemas.android.com/apk/res/android\\">

    <application
        android:allowBackup=\\"true\\"
        android:icon=\\"@mipmap/ic_launcher\\"
        android:label=\\"@string/app_name\\"
        android:roundIcon=\\"@mipmap/ic_launcher_round\\"
        android:supportsRtl=\\"true\\"
        android:theme=\\"@style/AppTheme\\">
        <activity android:name=\\".MainActivity\\">
            <intent-filter>
                <action android:name=\\"android.intent.action.MAIN\\"/>

                <category android:name=\\"android.intent.category.LAUNCHER\\"/>
            </intent-filter>
        </activity>
    </application>

</manifest>"
`;

exports[`Templates InstantSearch Android File content: app/src/main/java/com/algolia/instantsearch/app/MainActivity.java 1`] = `
"package com.example.instantsearch.app;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;

import com.example.instantsearch.helpers.Searcher;
import com.example.instantsearch.helpers.InstantSearch;

public class MainActivity extends AppCompatActivity {
    private static final String ALGOLIA_APP_ID = \\"appId\\";
    private static final String ALGOLIA_SEARCH_API_KEY = \\"apiKey\\";
    private static final String ALGOLIA_INDEX_NAME = \\"indexName\\";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        final Searcher searcher = Searcher.create(ALGOLIA_APP_ID, ALGOLIA_SEARCH_API_KEY, ALGOLIA_INDEX_NAME);
        final InstantSearch helper = new InstantSearch(this, searcher);
        helper.search(); // First empty search to display default results
    }
}"
`;

exports[`Templates InstantSearch Android File content: app/src/main/java/com/algolia/instantsearch/mvp/MainActivity.java 1`] = `
"package com.example.instantsearch.app;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;

import com.example.instantsearch.helpers.Searcher;
import com.example.instantsearch.helpers.InstantSearch;

public class MainActivity extends AppCompatActivity {
    private static final String ALGOLIA_APP_ID = \\"latency\\";
    private static final String ALGOLIA_SEARCH_API_KEY = \\"3d9875e51fbd20c7754e65422f7ce5e1\\";
    private static final String ALGOLIA_INDEX_NAME = \\"bestbuy\\";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        final Searcher searcher = Searcher.create(ALGOLIA_APP_ID, ALGOLIA_SEARCH_API_KEY, ALGOLIA_INDEX_NAME);
        final InstantSearch helper = new InstantSearch(this, searcher);
        helper.search(); // First empty search to display default results
    }
}"
`;

exports[`Templates InstantSearch Android File content: app/src/main/res/layout/activity_main.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<RelativeLayout
    android:id=\\"@+id/activity_main\\"
    xmlns:algolia=\\"http://schemas.android.com/apk/res-auto\\"
    xmlns:android=\\"http://schemas.android.com/apk/res/android\\"
    xmlns:tools=\\"http://schemas.android.com/tools\\"
    android:layout_width=\\"match_parent\\"
    android:layout_height=\\"match_parent\\"
    android:orientation=\\"vertical\\"
    tools:context=\\"com.example.instantsearch.app.MainActivity\\">

    <com.example.instantsearch.ui.views.SearchBox
        android:id=\\"@+id/search_box\\"
        android:layout_width=\\"match_parent\\"
        android:layout_height=\\"wrap_content\\"
        android:layout_marginBottom=\\"10dp\\"/>

    <com.example.instantsearch.ui.views.Hits
        android:id=\\"@+id/hits\\"
        android:layout_width=\\"match_parent\\"
        android:layout_height=\\"wrap_content\\"
        android:layout_below=\\"@id/search_box\\"
        algolia:itemLayout=\\"@layout/hits_item\\"/>
</RelativeLayout>"
`;

exports[`Templates InstantSearch Android File content: app/src/main/res/layout/hits_item.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<layout xmlns:algolia=\\"http://schemas.android.com/apk/res-auto\\"
        xmlns:android=\\"http://schemas.android.com/apk/res/android\\">

    <LinearLayout
        android:layout_width=\\"match_parent\\"
        android:layout_height=\\"wrap_content\\"
        android:orientation=\\"vertical\\">

        <TextView
            android:id=\\"@+id/mainAttribute\\"
            android:layout_width=\\"wrap_content\\"
            android:layout_height=\\"wrap_content\\"
            android:layout_marginTop=\\"10dp\\"
            android:text=\\"mainAttribute\\"
            android:textSize=\\"20sp\\"
            algolia:attribute='@{\\"mainAttribute\\"}'
            algolia:highlightColor=\\"@color/colorAccent\\"
            algolia:highlighted=\\"@{true}\\"/>
    </LinearLayout>
</layout>"
`;

exports[`Templates InstantSearch Android File content: app/src/main/res/values/colors.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<resources>
    <color name=\\"colorPrimary\\">#3F51B5</color>
    <color name=\\"colorPrimaryDark\\">#303F9F</color>
    <color name=\\"colorAccent\\">#FF4081</color>
</resources>"
`;

exports[`Templates InstantSearch Android File content: app/src/main/res/values/strings.xml 1`] = `
"<resources>
    <string name=\\"app_name\\">instantsearch-android-app</string>
</resources>"
`;

exports[`Templates InstantSearch Android File content: app/src/main/res/values/styles.xml 1`] = `
"<resources>

    <!-- Base application theme. -->
    <style name=\\"AppTheme\\" parent=\\"Theme.AppCompat.Light.DarkActionBar\\">
        <!-- Customize your theme here. -->
        <item name=\\"colorPrimary\\">@color/colorPrimary</item>
        <item name=\\"colorPrimaryDark\\">@color/colorPrimaryDark</item>
        <item name=\\"colorAccent\\">@color/colorAccent</item>
    </style>

</resources>"
`;

exports[`Templates InstantSearch Android File content: build.gradle 1`] = `
"// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}"
`;

exports[`Templates InstantSearch Android File content: gradle.properties 1`] = `
"# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx1536m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true"
`;

exports[`Templates InstantSearch Android File content: gradle/wrapper/gradle-wrapper.properties 1`] = `
"#Tue Jul 03 16:02:11 CEST 2018
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
distributionUrl=https\\\\://services.gradle.org/distributions/gradle-4.4-all.zip"
`;

exports[`Templates InstantSearch Android File content: gradlew 1`] = `
"#!/usr/bin/env bash

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=\\"\\"

APP_NAME=\\"Gradle\\"
APP_BASE_NAME=\`basename \\"$0\\"\`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=\\"maximum\\"

warn ( ) {
    echo \\"$*\\"
}

die ( ) {
    echo
    echo \\"$*\\"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
case \\"\`uname\`\\" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
esac

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG=\\"$0\\"
# Need this for relative symlinks.
while [ -h \\"$PRG\\" ] ; do
    ls=\`ls -ld \\"$PRG\\"\`
    link=\`expr \\"$ls\\" : '.*-> \\\\(.*\\\\)$'\`
    if expr \\"$link\\" : '/.*' > /dev/null; then
        PRG=\\"$link\\"
    else
        PRG=\`dirname \\"$PRG\\"\`\\"/$link\\"
    fi
done
SAVED=\\"\`pwd\`\\"
cd \\"\`dirname \\\\\\"$PRG\\\\\\"\`/\\" >/dev/null
APP_HOME=\\"\`pwd -P\`\\"
cd \\"$SAVED\\" >/dev/null

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# Determine the Java command to use to start the JVM.
if [ -n \\"$JAVA_HOME\\" ] ; then
    if [ -x \\"$JAVA_HOME/jre/sh/java\\" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=\\"$JAVA_HOME/jre/sh/java\\"
    else
        JAVACMD=\\"$JAVA_HOME/bin/java\\"
    fi
    if [ ! -x \\"$JAVACMD\\" ] ; then
        die \\"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation.\\"
    fi
else
    JAVACMD=\\"java\\"
    which java >/dev/null 2>&1 || die \\"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation.\\"
fi

# Increase the maximum file descriptors if we can.
if [ \\"$cygwin\\" = \\"false\\" -a \\"$darwin\\" = \\"false\\" ] ; then
    MAX_FD_LIMIT=\`ulimit -H -n\`
    if [ $? -eq 0 ] ; then
        if [ \\"$MAX_FD\\" = \\"maximum\\" -o \\"$MAX_FD\\" = \\"max\\" ] ; then
            MAX_FD=\\"$MAX_FD_LIMIT\\"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn \\"Could not set maximum file descriptor limit: $MAX_FD\\"
        fi
    else
        warn \\"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\\"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS=\\"$GRADLE_OPTS \\\\\\"-Xdock:name=$APP_NAME\\\\\\" \\\\\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\\\\"\\"
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=\`cygpath --path --mixed \\"$APP_HOME\\"\`
    CLASSPATH=\`cygpath --path --mixed \\"$CLASSPATH\\"\`
    JAVACMD=\`cygpath --unix \\"$JAVACMD\\"\`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=\`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null\`
    SEP=\\"\\"
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS=\\"$ROOTDIRS$SEP$dir\\"
        SEP=\\"|\\"
    done
    OURCYGPATTERN=\\"(^($ROOTDIRS))\\"
    # Add a user-defined pattern to the cygpath arguments
    if [ \\"$GRADLE_CYGPATTERN\\" != \\"\\" ] ; then
        OURCYGPATTERN=\\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\\"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in \\"$@\\" ; do
        CHECK=\`echo \\"$arg\\"|egrep -c \\"$OURCYGPATTERN\\" -\`
        CHECK2=\`echo \\"$arg\\"|egrep -c \\"^-\\"\`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval \`echo args$i\`=\`cygpath --path --ignore --mixed \\"$arg\\"\`
        else
            eval \`echo args$i\`=\\"\\\\\\"$arg\\\\\\"\\"
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- \\"$args0\\" ;;
        (2) set -- \\"$args0\\" \\"$args1\\" ;;
        (3) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" ;;
        (4) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" \\"$args3\\" ;;
        (5) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" \\"$args3\\" \\"$args4\\" ;;
        (6) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" \\"$args3\\" \\"$args4\\" \\"$args5\\" ;;
        (7) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" \\"$args3\\" \\"$args4\\" \\"$args5\\" \\"$args6\\" ;;
        (8) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" \\"$args3\\" \\"$args4\\" \\"$args5\\" \\"$args6\\" \\"$args7\\" ;;
        (9) set -- \\"$args0\\" \\"$args1\\" \\"$args2\\" \\"$args3\\" \\"$args4\\" \\"$args5\\" \\"$args6\\" \\"$args7\\" \\"$args8\\" ;;
    esac
fi

# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
function splitJvmOpts() {
    JVM_OPTS=(\\"$@\\")
}
eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
JVM_OPTS[\${#JVM_OPTS[*]}]=\\"-Dorg.gradle.appname=$APP_BASE_NAME\\"

exec \\"$JAVACMD\\" \\"\${JVM_OPTS[@]}\\" -classpath \\"$CLASSPATH\\" org.gradle.wrapper.GradleWrapperMain \\"$@\\""
`;

exports[`Templates InstantSearch Android File content: gradlew.bat 1`] = `
"@if \\"%DEBUG%\\" == \\"\\" @echo off
@rem ##########################################################################
@rem
@rem  Gradle startup script for Windows
@rem
@rem ##########################################################################

@rem Set local scope for the variables with windows NT shell
if \\"%OS%\\"==\\"Windows_NT\\" setlocal

@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
set DEFAULT_JVM_OPTS=

set DIRNAME=%~dp0
if \\"%DIRNAME%\\" == \\"\\" set DIRNAME=.
set APP_BASE_NAME=%~n0
set APP_HOME=%DIRNAME%

@rem Find java.exe
if defined JAVA_HOME goto findJavaFromJavaHome

set JAVA_EXE=java.exe
%JAVA_EXE% -version >NUL 2>&1
if \\"%ERRORLEVEL%\\" == \\"0\\" goto init

echo.
echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:findJavaFromJavaHome
set JAVA_HOME=%JAVA_HOME:\\"=%
set JAVA_EXE=%JAVA_HOME%/bin/java.exe

if exist \\"%JAVA_EXE%\\" goto init

echo.
echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:init
@rem Get command-line arguments, handling Windowz variants

if not \\"%OS%\\" == \\"Windows_NT\\" goto win9xME_args
if \\"%@eval[2+2]\\" == \\"4\\" goto 4NT_args

:win9xME_args
@rem Slurp the command line arguments.
set CMD_LINE_ARGS=
set _SKIP=2

:win9xME_args_slurp
if \\"x%~1\\" == \\"x\\" goto execute

set CMD_LINE_ARGS=%*
goto execute

:4NT_args
@rem Get arguments from the 4NT Shell from JP Software
set CMD_LINE_ARGS=%$

:execute
@rem Setup the command line

set CLASSPATH=%APP_HOME%\\\\gradle\\\\wrapper\\\\gradle-wrapper.jar

@rem Execute Gradle
\\"%JAVA_EXE%\\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \\"-Dorg.gradle.appname=%APP_BASE_NAME%\\" -classpath \\"%CLASSPATH%\\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%

:end
@rem End local scope for the variables with windows NT shell
if \\"%ERRORLEVEL%\\"==\\"0\\" goto mainEnd

:fail
rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
rem the _cmd.exe /c_ return code!
if  not \\"\\" == \\"%GRADLE_EXIT_CONSOLE%\\" exit 1
exit /b 1

:mainEnd
if \\"%OS%\\"==\\"Windows_NT\\" endlocal

:omega"
`;

exports[`Templates InstantSearch Android File content: settings.gradle 1`] = `"include ':app'"`;

exports[`Templates InstantSearch Android Folder structure: contains the right files 1`] = `
Array [
  ".gitignore",
  "app/.gitignore",
  "app/build.gradle",
  "app/proguard-rules.pro",
  "app/src/androidTest/java/com/algolia/instantsearch/mvp/ExampleInstrumentedTest.java",
  "app/src/main/AndroidManifest.xml",
  "app/src/main/java/com/algolia/instantsearch/app/MainActivity.java",
  "app/src/main/java/com/algolia/instantsearch/mvp/MainActivity.java",
  "app/src/main/res/layout/activity_main.xml",
  "app/src/main/res/layout/hits_item.xml",
  "app/src/main/res/mipmap-hdpi/ic_launcher.png",
  "app/src/main/res/mipmap-hdpi/ic_launcher_round.png",
  "app/src/main/res/mipmap-mdpi/ic_launcher.png",
  "app/src/main/res/mipmap-mdpi/ic_launcher_round.png",
  "app/src/main/res/mipmap-xhdpi/ic_launcher.png",
  "app/src/main/res/mipmap-xhdpi/ic_launcher_round.png",
  "app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
  "app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png",
  "app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
  "app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png",
  "app/src/main/res/values/colors.xml",
  "app/src/main/res/values/strings.xml",
  "app/src/main/res/values/styles.xml",
  "build.gradle",
  "gradle.properties",
  "gradle/wrapper/gradle-wrapper.jar",
  "gradle/wrapper/gradle-wrapper.properties",
  "gradlew",
  "gradlew.bat",
  "settings.gradle",
]
`;

exports[`Templates InstantSearch iOS File content: .gitignore 1`] = `
"# Created by https://www.gitignore.io/api/swift

### Swift ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output


# End of https://www.gitignore.io/api/swift"
`;

exports[`Templates InstantSearch iOS File content: App.xcodeproj/project.pbxproj 1`] = `
"// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		94AAC2EA92803A83565D7073 /* Pods_App.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E045BD52917EA4B39612E12B /* Pods_App.framework */; };
		E258C9271EE036970076097D /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = E258C9261EE036970076097D /* AppDelegate.swift */; };
		E258C9291EE036970076097D /* ViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = E258C9281EE036970076097D /* ViewController.swift */; };
		E258C92C1EE036970076097D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = E258C92A1EE036970076097D /* Main.storyboard */; };
		E258C92E1EE036970076097D /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = E258C92D1EE036970076097D /* Assets.xcassets */; };
		E258C9311EE036970076097D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = E258C92F1EE036970076097D /* LaunchScreen.storyboard */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		7B3645EFB63597C820FD0759 /* Pods-App.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \\"Pods-App.release.xcconfig\\"; path = \\"Pods/Target Support Files/Pods-App/Pods-App.release.xcconfig\\"; sourceTree = \\"<group>\\"; };
		B7E0369A70FFFFD97E30AF6C /* Pods-App.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \\"Pods-App.debug.xcconfig\\"; path = \\"Pods/Target Support Files/Pods-App/Pods-App.debug.xcconfig\\"; sourceTree = \\"<group>\\"; };
		E045BD52917EA4B39612E12B /* Pods_App.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_App.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		E258C9231EE036970076097D /* App.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = \\"App.app\\"; sourceTree = BUILT_PRODUCTS_DIR; };
		E258C9261EE036970076097D /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = \\"<group>\\"; };
		E258C9281EE036970076097D /* ViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ViewController.swift; sourceTree = \\"<group>\\"; };
		E258C92B1EE036970076097D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = \\"<group>\\"; };
		E258C92D1EE036970076097D /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = \\"<group>\\"; };
		E258C9301EE036970076097D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = \\"<group>\\"; };
		E258C9321EE036970076097D /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = \\"<group>\\"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		E258C9201EE036970076097D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				94AAC2EA92803A83565D7073 /* Pods_App.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		5188048A03FF48C89161FB44 /* Pods */ = {
			isa = PBXGroup;
			children = (
				B7E0369A70FFFFD97E30AF6C /* Pods-App.debug.xcconfig */,
				7B3645EFB63597C820FD0759 /* Pods-App.release.xcconfig */,
			);
			name = Pods;
			sourceTree = \\"<group>\\";
		};
		D3097422C732829DA51DBC25 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				E045BD52917EA4B39612E12B /* Pods_App.framework */,
			);
			name = Frameworks;
			sourceTree = \\"<group>\\";
		};
		E258C91A1EE036970076097D = {
			isa = PBXGroup;
			children = (
				E258C9251EE036970076097D /* App */,
				E258C9241EE036970076097D /* Products */,
				5188048A03FF48C89161FB44 /* Pods */,
				D3097422C732829DA51DBC25 /* Frameworks */,
			);
			sourceTree = \\"<group>\\";
		};
		E258C9241EE036970076097D /* Products */ = {
			isa = PBXGroup;
			children = (
				E258C9231EE036970076097D /* App.app */,
			);
			name = Products;
			sourceTree = \\"<group>\\";
		};
		E258C9251EE036970076097D /* App */ = {
			isa = PBXGroup;
			children = (
				E258C9261EE036970076097D /* AppDelegate.swift */,
				E258C9281EE036970076097D /* ViewController.swift */,
				E258C92A1EE036970076097D /* Main.storyboard */,
				E258C92D1EE036970076097D /* Assets.xcassets */,
				E258C92F1EE036970076097D /* LaunchScreen.storyboard */,
				E258C9321EE036970076097D /* Info.plist */,
			);
			path = \\"App\\";
			sourceTree = \\"<group>\\";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		E258C9221EE036970076097D /* App */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E258C9351EE036970076097D /* Build configuration list for PBXNativeTarget \\"App\\" */;
			buildPhases = (
				6ED659C468517EE7AE9D6746 /* [CP] Check Pods Manifest.lock */,
				E258C91F1EE036970076097D /* Sources */,
				E258C9201EE036970076097D /* Frameworks */,
				E258C9211EE036970076097D /* Resources */,
				483D9B8DF06BBE2B572623D2 /* [CP] Embed Pods Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = \\"App\\";
			productName = \\"App\\";
			productReference = E258C9231EE036970076097D /* App.app */;
			productType = \\"com.apple.product-type.application\\";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		E258C91B1EE036970076097D /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0830;
				LastUpgradeCheck = 0830;
				ORGANIZATIONNAME = \\"Guy Daher\\";
				TargetAttributes = {
					E258C9221EE036970076097D = {
						CreatedOnToolsVersion = 8.3.2;
						DevelopmentTeam = K3DV6EU9CV;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = E258C91E1EE036970076097D /* Build configuration list for PBXProject \\"App\\" */;
			compatibilityVersion = \\"Xcode 3.2\\";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = E258C91A1EE036970076097D;
			productRefGroup = E258C9241EE036970076097D /* Products */;
			projectDirPath = \\"\\";
			projectRoot = \\"\\";
			targets = (
				E258C9221EE036970076097D /* App */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		E258C9211EE036970076097D /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E258C9311EE036970076097D /* LaunchScreen.storyboard in Resources */,
				E258C92E1EE036970076097D /* Assets.xcassets in Resources */,
				E258C92C1EE036970076097D /* Main.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		483D9B8DF06BBE2B572623D2 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				\\"\${SRCROOT}/Pods/Target Support Files/Pods-App/Pods-App-frameworks.sh\\",
				\\"\${BUILT_PRODUCTS_DIR}/InstantSearch/InstantSearch.framework\\",
				\\"\${BUILT_PRODUCTS_DIR}/InstantSearchClient/InstantSearchClient.framework\\",
				\\"\${BUILT_PRODUCTS_DIR}/InstantSearchCore/InstantSearchCore.framework\\",
			);
			name = \\"[CP] Embed Pods Frameworks\\";
			outputPaths = (
				\\"\${TARGET_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/InstantSearch.framework\\",
				\\"\${TARGET_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/InstantSearchClient.framework\\",
				\\"\${TARGET_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/InstantSearchCore.framework\\",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = \\"\\\\\\"\${SRCROOT}/Pods/Target Support Files/Pods-App/Pods-App-frameworks.sh\\\\\\"\\\\n\\";
			showEnvVarsInLog = 0;
		};
		6ED659C468517EE7AE9D6746 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				\\"\${PODS_PODFILE_DIR_PATH}/Podfile.lock\\",
				\\"\${PODS_ROOT}/Manifest.lock\\",
			);
			name = \\"[CP] Check Pods Manifest.lock\\";
			outputPaths = (
				\\"$(DERIVED_FILE_DIR)/Pods-App-checkManifestLockResult.txt\\",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = \\"diff \\\\\\"\${PODS_PODFILE_DIR_PATH}/Podfile.lock\\\\\\" \\\\\\"\${PODS_ROOT}/Manifest.lock\\\\\\" > /dev/null\\\\nif [ $? != 0 ] ; then\\\\n    # print error to STDERR\\\\n    echo \\\\\\"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\\\\\\" >&2\\\\n    exit 1\\\\nfi\\\\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\\\\necho \\\\\\"SUCCESS\\\\\\" > \\\\\\"\${SCRIPT_OUTPUT_FILE_0}\\\\\\"\\\\n\\";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		E258C91F1EE036970076097D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E258C9291EE036970076097D /* ViewController.swift in Sources */,
				E258C9271EE036970076097D /* AppDelegate.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		E258C92A1EE036970076097D /* Main.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				E258C92B1EE036970076097D /* Base */,
			);
			name = Main.storyboard;
			sourceTree = \\"<group>\\";
		};
		E258C92F1EE036970076097D /* LaunchScreen.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				E258C9301EE036970076097D /* Base */,
			);
			name = LaunchScreen.storyboard;
			sourceTree = \\"<group>\\";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		E258C9331EE036970076097D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = \\"gnu++0x\\";
				CLANG_CXX_LIBRARY = \\"libc++\\";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				\\"CODE_SIGN_IDENTITY[sdk=iphoneos*]\\" = \\"iPhone Developer\\";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					\\"DEBUG=1\\",
					\\"$(inherited)\\",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.3;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = \\"-Onone\\";
			};
			name = Debug;
		};
		E258C9341EE036970076097D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = \\"gnu++0x\\";
				CLANG_CXX_LIBRARY = \\"libc++\\";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				\\"CODE_SIGN_IDENTITY[sdk=iphoneos*]\\" = \\"iPhone Developer\\";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = \\"dwarf-with-dsym\\";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SWIFT_OPTIMIZATION_LEVEL = \\"-Owholemodule\\";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		E258C9361EE036970076097D /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B7E0369A70FFFFD97E30AF6C /* Pods-App.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEVELOPMENT_TEAM = K3DV6EU9CV;
				INFOPLIST_FILE = \\"App/Info.plist\\";
				LD_RUNPATH_SEARCH_PATHS = \\"$(inherited) @executable_path/Frameworks\\";
				PRODUCT_BUNDLE_IDENTIFIER = \\"io.daher.Getting-Started-Programatically\\";
				PRODUCT_NAME = \\"$(TARGET_NAME)\\";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		E258C9371EE036970076097D /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7B3645EFB63597C820FD0759 /* Pods-App.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEVELOPMENT_TEAM = K3DV6EU9CV;
				INFOPLIST_FILE = \\"App/Info.plist\\";
				LD_RUNPATH_SEARCH_PATHS = \\"$(inherited) @executable_path/Frameworks\\";
				PRODUCT_BUNDLE_IDENTIFIER = \\"io.daher.Getting-Started-Programatically\\";
				PRODUCT_NAME = \\"$(TARGET_NAME)\\";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		E258C91E1EE036970076097D /* Build configuration list for PBXProject \\"App\\" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E258C9331EE036970076097D /* Debug */,
				E258C9341EE036970076097D /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E258C9351EE036970076097D /* Build configuration list for PBXNativeTarget \\"App\\" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E258C9361EE036970076097D /* Debug */,
				E258C9371EE036970076097D /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = E258C91B1EE036970076097D /* Project object */;
}"
`;

exports[`Templates InstantSearch iOS File content: App.xcodeproj/project.xcworkspace/contents.xcworkspacedata 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<Workspace
   version = \\"1.0\\">
   <FileRef
      location = \\"self:App.xcodeproj\\">
   </FileRef>
</Workspace>"
`;

exports[`Templates InstantSearch iOS File content: App.xcworkspace/contents.xcworkspacedata 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<Workspace
   version = \\"1.0\\">
   <FileRef
      location = \\"group:App.xcodeproj\\">
   </FileRef>
   <FileRef
      location = \\"group:Pods/Pods.xcodeproj\\">
   </FileRef>
</Workspace>"
`;

exports[`Templates InstantSearch iOS File content: App.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<!DOCTYPE plist PUBLIC \\"-//Apple//DTD PLIST 1.0//EN\\" \\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\">
<plist version=\\"1.0\\">
<dict>
	<key>IDEDidComputeMac32BitWarning</key>
	<true/>
</dict>
</plist>"
`;

exports[`Templates InstantSearch iOS File content: App/AppDelegate.swift 1`] = `
"import UIKit
import InstantSearch

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {

    var window: UIWindow?

    private let ALGOLIA_APP_ID = \\"appId\\"
    private let ALGOLIA_API_KEY = \\"apiKey\\"
    private let ALGOLIA_INDEX_NAME = \\"indexName\\"

    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {
        // Override point for customization after application launch.
        InstantSearch.shared.configure(appID: ALGOLIA_APP_ID, apiKey: ALGOLIA_API_KEY, index: ALGOLIA_INDEX_NAME)
        InstantSearch.shared.params.attributesToRetrieve = [\\"mainAttribute\\"]
        InstantSearch.shared.params.attributesToHighlight = [\\"mainAttribute\\"]

        return true
    }

    func applicationWillResignActive(_ application: UIApplication) {
        // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
        // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks. Games should use this method to pause the game.
    }

    func applicationDidEnterBackground(_ application: UIApplication) {
        // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
        // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
    }

    func applicationWillEnterForeground(_ application: UIApplication) {
        // Called as part of the transition from the background to the active state; here you can undo many of the changes made on entering the background.
    }

    func applicationDidBecomeActive(_ application: UIApplication) {
        // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
    }

    func applicationWillTerminate(_ application: UIApplication) {
        // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
    }


}"
`;

exports[`Templates InstantSearch iOS File content: App/Assets.xcassets/AppIcon.appiconset/Contents.json 1`] = `
"{
  \\"images\\" : [
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"20x20\\",
      \\"scale\\" : \\"2x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"20x20\\",
      \\"scale\\" : \\"3x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"29x29\\",
      \\"scale\\" : \\"2x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"29x29\\",
      \\"scale\\" : \\"3x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"40x40\\",
      \\"scale\\" : \\"2x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"40x40\\",
      \\"scale\\" : \\"3x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"60x60\\",
      \\"scale\\" : \\"2x\\"
    },
    {
      \\"idiom\\" : \\"iphone\\",
      \\"size\\" : \\"60x60\\",
      \\"scale\\" : \\"3x\\"
    }
  ],
  \\"info\\" : {
    \\"version\\" : 1,
    \\"author\\" : \\"xcode\\"
  }
}"
`;

exports[`Templates InstantSearch iOS File content: App/Base.lproj/LaunchScreen.storyboard 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"no\\"?>
<document type=\\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\\" version=\\"3.0\\" toolsVersion=\\"11134\\" systemVersion=\\"15F34\\" targetRuntime=\\"iOS.CocoaTouch\\" propertyAccessControl=\\"none\\" useAutolayout=\\"YES\\" launchScreen=\\"YES\\" useTraitCollections=\\"YES\\" colorMatched=\\"YES\\" initialViewController=\\"01J-lp-oVM\\">
    <dependencies>
        <plugIn identifier=\\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\\" version=\\"11106\\"/>
        <capability name=\\"documents saved in the Xcode 8 format\\" minToolsVersion=\\"8.0\\"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID=\\"EHf-IW-A2E\\">
            <objects>
                <viewController id=\\"01J-lp-oVM\\" sceneMemberID=\\"viewController\\">
                    <layoutGuides>
                        <viewControllerLayoutGuide type=\\"top\\" id=\\"Llm-lL-Icb\\"/>
                        <viewControllerLayoutGuide type=\\"bottom\\" id=\\"xb3-aO-Qok\\"/>
                    </layoutGuides>
                    <view key=\\"view\\" contentMode=\\"scaleToFill\\" id=\\"Ze5-6b-2t3\\">
                        <rect key=\\"frame\\" x=\\"0.0\\" y=\\"0.0\\" width=\\"375\\" height=\\"667\\"/>
                        <autoresizingMask key=\\"autoresizingMask\\" widthSizable=\\"YES\\" heightSizable=\\"YES\\"/>
                        <color key=\\"backgroundColor\\" red=\\"1\\" green=\\"1\\" blue=\\"1\\" alpha=\\"1\\" colorSpace=\\"custom\\" customColorSpace=\\"sRGB\\"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier=\\"IBFirstResponder\\" id=\\"iYj-Kq-Ea1\\" userLabel=\\"First Responder\\" sceneMemberID=\\"firstResponder\\"/>
            </objects>
            <point key=\\"canvasLocation\\" x=\\"53\\" y=\\"375\\"/>
        </scene>
    </scenes>
</document>"
`;

exports[`Templates InstantSearch iOS File content: App/Base.lproj/Main.storyboard 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<document type=\\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\\" version=\\"3.0\\" toolsVersion=\\"12120\\" systemVersion=\\"16F71b\\" targetRuntime=\\"iOS.CocoaTouch\\" propertyAccessControl=\\"none\\" useAutolayout=\\"YES\\" useTraitCollections=\\"YES\\" colorMatched=\\"YES\\" initialViewController=\\"BYZ-38-t0r\\">
    <device id=\\"retina4_7\\" orientation=\\"portrait\\">
        <adaptation id=\\"fullscreen\\"/>
    </device>
    <dependencies>
        <deployment identifier=\\"iOS\\"/>
        <plugIn identifier=\\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\\" version=\\"12088\\"/>
        <capability name=\\"documents saved in the Xcode 8 format\\" minToolsVersion=\\"8.0\\"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID=\\"tne-QT-ifu\\">
            <objects>
                <viewController id=\\"BYZ-38-t0r\\" customClass=\\"ViewController\\" customModule=\\"Getting_Started_Programatically\\" customModuleProvider=\\"target\\" sceneMemberID=\\"viewController\\">
                    <layoutGuides>
                        <viewControllerLayoutGuide type=\\"top\\" id=\\"y3c-jy-aDJ\\"/>
                        <viewControllerLayoutGuide type=\\"bottom\\" id=\\"wfy-db-euE\\"/>
                    </layoutGuides>
                    <view key=\\"view\\" contentMode=\\"scaleToFill\\" id=\\"8bC-Xf-vdC\\">
                        <rect key=\\"frame\\" x=\\"0.0\\" y=\\"0.0\\" width=\\"375\\" height=\\"667\\"/>
                        <autoresizingMask key=\\"autoresizingMask\\" widthSizable=\\"YES\\" heightSizable=\\"YES\\"/>
                        <color key=\\"backgroundColor\\" red=\\"1\\" green=\\"1\\" blue=\\"1\\" alpha=\\"1\\" colorSpace=\\"custom\\" customColorSpace=\\"sRGB\\"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier=\\"IBFirstResponder\\" id=\\"dkx-z0-nzr\\" sceneMemberID=\\"firstResponder\\"/>
            </objects>
            <point key=\\"canvasLocation\\" x=\\"136.80000000000001\\" y=\\"138.98050974512745\\"/>
        </scene>
    </scenes>
</document>"
`;

exports[`Templates InstantSearch iOS File content: App/Info.plist 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<!DOCTYPE plist PUBLIC \\"-//Apple//DTD PLIST 1.0//EN\\" \\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\">
<plist version=\\"1.0\\">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0</string>
	<key>CFBundleVersion</key>
	<string>1</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UIRequiredDeviceCapabilities</key>
	<array>
		<string>armv7</string>
	</array>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
</dict>
</plist>"
`;

exports[`Templates InstantSearch iOS File content: App/ViewController.swift 1`] = `
"import UIKit
import InstantSearch
import InstantSearchCore

class ViewController: HitsTableViewController {

    // Create your widgets
    let searchBar = SearchBarWidget(frame: .zero)
    let stats = StatsLabelWidget(frame: .zero)
    let tableView = HitsTableWidget(frame: .zero)

    override func viewDidLoad() {
        super.viewDidLoad()

        initUI()

        // and assign tableView to InstantSearch
        hitsTableView = tableView

        // Add all widgets to InstantSearch
        InstantSearch.shared.registerAllWidgets(in: self.view)
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath, containing hit: [String : Any]) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: \\"hitCell\\", for: indexPath)

        cell.textLabel?.highlightedTextColor = .blue
        cell.textLabel?.highlightedBackgroundColor = .yellow
        cell.textLabel?.highlightedText = SearchResults.highlightResult(hit: hit, path: \\"name\\")?.value

        return cell
    }

    func initUI() {
        // Add the declared views to the main view
        self.view.addSubview(searchBar)
        self.view.addSubview(stats)
        self.view.addSubview(tableView)

        // Add autolayout constraints
        searchBar.translatesAutoresizingMaskIntoConstraints = false
        stats.translatesAutoresizingMaskIntoConstraints = false
        tableView.translatesAutoresizingMaskIntoConstraints = false

        let views = [\\"searchBar\\": searchBar, \\"stats\\": stats, \\"tableView\\": tableView]
        var constraints = [NSLayoutConstraint]()
        constraints += NSLayoutConstraint.constraints(withVisualFormat: \\"V:|-30-[searchBar]-10-[stats]-10-[tableView]-|\\", options: [], metrics: nil, views:views)
        constraints += NSLayoutConstraint.constraints(withVisualFormat: \\"H:|-25-[searchBar]-25-|\\", options: [], metrics: nil, views:views)
        constraints += NSLayoutConstraint.constraints(withVisualFormat: \\"H:|-25-[stats]-25-|\\", options: [], metrics: nil, views:views)
        constraints += NSLayoutConstraint.constraints(withVisualFormat: \\"H:|-[tableView]-|\\", options: [], metrics: nil, views:views)
        NSLayoutConstraint.activate(constraints)

        // Register tableView identifier
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: \\"hitCell\\")

        // Style the stats label
        stats.textAlignment = .center
        stats.font = UIFont.boldSystemFont(ofSize:18.0)
    }

}"
`;

exports[`Templates InstantSearch iOS File content: Podfile 1`] = `
"# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'App' do
  # Comment the next line if you're not using Swift and don't want to use dynamic frameworks
  use_frameworks!

  # Pods for App
  pod 'InstantSearch'

end"
`;

exports[`Templates InstantSearch iOS Folder structure: contains the right files 1`] = `
Array [
  ".gitignore",
  "App.xcodeproj/project.pbxproj",
  "App.xcodeproj/project.xcworkspace/contents.xcworkspacedata",
  "App.xcworkspace/contents.xcworkspacedata",
  "App.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist",
  "App/AppDelegate.swift",
  "App/Assets.xcassets/AppIcon.appiconset/Contents.json",
  "App/Base.lproj/LaunchScreen.storyboard",
  "App/Base.lproj/Main.storyboard",
  "App/Info.plist",
  "App/ViewController.swift",
  "Podfile",
]
`;

exports[`Templates InstantSearch.js File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates InstantSearch.js File content: .eslintignore 1`] = `
"/node_modules
/dist
/.cache"
`;

exports[`Templates InstantSearch.js File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia',
};"
`;

exports[`Templates InstantSearch.js File content: .gitignore 1`] = `
"# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules

# testing
/coverage

# production
/dist
/.cache

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*"
`;

exports[`Templates InstantSearch.js File content: .prettierrc 1`] = `
"{
  \\"singleQuote\\": true,
  \\"proseWrap\\": \\"never\\",
  \\"trailingComma\\": \\"es5\\"
}"
`;

exports[`Templates InstantSearch.js File content: README.md 1`] = `
"# instantsearch.js-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates InstantSearch.js File content: index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"./manifest.webmanifest\\">
  <link rel=\\"shortcut icon\\" href=\\"./favicon.png\\">

  <link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/instantsearch.js@1.0.0/dist/instantsearch.min.css\\">
  <link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/instantsearch.js@1.0.0/dist/instantsearch-theme-algolia.min.css\\">
  <link rel=\\"stylesheet\\" href=\\"./src/index.css\\">
  <link rel=\\"stylesheet\\" href=\\"./src/app.css\\">

  <title>instantsearch.js-app</title>
</head>

<body>
  <header class=\\"header\\">
    <h1 class=\\"header-title\\">
      <a href=\\"/\\">instantsearch.js-app</a>
    </h1>
    <p class=\\"header-subtitle\\">
      using
      <a href=\\"https://community.algolia.com/instantsearch.js/\\">
        InstantSearch.js
      </a>
    </p>
  </header>

  <div class=\\"container\\">
    <div class=\\"search-panel\\">
      <div class=\\"search-panel__filters\\">
        <div id=\\"facet1-list\\"></div>
        <div id=\\"facet2-list\\"></div>
      </div>

      <div class=\\"search-panel__results\\">
        <div id=\\"searchbox\\"></div>
        <div id=\\"hits\\"></div>
      </div>
    </div>

    <div id=\\"pagination\\"></div>
  </div>

  <script src=\\"https://cdn.jsdelivr.net/npm/instantsearch.js@1.0.0\\"></script>
  <script src=\\"./src/app.js\\"></script>
</body>

</html>"
`;

exports[`Templates InstantSearch.js File content: manifest.webmanifest 1`] = `
"{
  \\"short_name\\": \\"instantsearch.js-app\\",
  \\"name\\": \\"instantsearch.js-app Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"./index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates InstantSearch.js File content: package.json 1`] = `
"{
  \\"name\\": \\"instantsearch.js-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"start\\": \\"parcel index.html --port 3000\\",
    \\"build\\": \\"parcel build index.html\\",
    \\"lint\\": \\"eslint .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"devDependencies\\": {
    \\"babel-eslint\\": \\"8.2.5\\",
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"parcel-bundler\\": \\"1.9.3\\",
    \\"prettier\\": \\"1.13.5\\"
  }
}"
`;

exports[`Templates InstantSearch.js File content: src/app.css 1`] = `
"em {
  background: cyan;
  font-style: normal;
}

.header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(284deg, #fedd4e, #fcb43a);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.search-panel {
  display: flex;
}

.search-panel__filters {
  flex: 1;
}

.search-panel__results {
  flex: 3;
}

.ais-hits {
  display: grid;
  grid-template-columns: 47.5% 47.5%;
  grid-gap: 1rem;
}

.ais-hits--item {
  min-height: 100px;
  padding: 1rem;
  background: #fff;
  border-radius: 4px;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.16);
}

#searchbox {
  margin-bottom: 2rem;
}

#pagination {
  margin: 2rem auto;
  text-align: center;
}"
`;

exports[`Templates InstantSearch.js File content: src/app.js 1`] = `
"/* global instantsearch */

const search = instantsearch({
  appId: 'appId',
  apiKey: 'apiKey',
  indexName: 'indexName',
});

search.addWidget(
  instantsearch.widgets.searchBox({
    container: '#searchbox',
    placeholder: 'Search placeholder',
  })
);

search.addWidget(
  instantsearch.widgets.hits({
    container: '#hits',
    templates: {
      item: \`
        <div>
          <header>{{{_highlightResult.mainAttribute.value}}}</header>
        </div>
      \`,
    },
  })
);

search.addWidget(
  instantsearch.widgets.refinementList({
    container: '#facet1-list',
    attributeName: 'facet1',
  })
);

search.addWidget(
  instantsearch.widgets.refinementList({
    container: '#facet2-list',
    attributeName: 'facet2',
  })
);

search.addWidget(
  instantsearch.widgets.pagination({
    container: '#pagination',
  })
);

search.start();"
`;

exports[`Templates InstantSearch.js File content: src/index.css 1`] = `
"body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}"
`;

exports[`Templates InstantSearch.js Folder structure: contains the right files 1`] = `
Array [
  ".editorconfig",
  ".eslintignore",
  ".eslintrc.js",
  ".gitignore",
  ".prettierrc",
  "README.md",
  "favicon.png",
  "index.html",
  "manifest.webmanifest",
  "package.json",
  "src/app.css",
  "src/app.js",
  "src/index.css",
]
`;

exports[`Templates JavaScript Client File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates JavaScript Client File content: .eslintignore 1`] = `
"/node_modules
/dist
/.cache"
`;

exports[`Templates JavaScript Client File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia',
};"
`;

exports[`Templates JavaScript Client File content: .gitignore 1`] = `
"# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules

# testing
/coverage

# production
/dist
/.cache

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*"
`;

exports[`Templates JavaScript Client File content: .prettierrc 1`] = `
"{
  \\"singleQuote\\": true,
  \\"proseWrap\\": \\"never\\",
  \\"trailingComma\\": \\"es5\\"
}"
`;

exports[`Templates JavaScript Client File content: README.md 1`] = `
"# javascript-client-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates JavaScript Client File content: index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"./manifest.webmanifest\\">
  <link rel=\\"shortcut icon\\" href=\\"./favicon.png\\">

  <link rel=\\"stylesheet\\" href=\\"./src/index.css\\">
  <link rel=\\"stylesheet\\" href=\\"./src/app.css\\">

  <title>javascript-client-app</title>
</head>

<body>
  <header class=\\"header\\">
    <h1 class=\\"header-title\\">
      <a href=\\"/\\">javascript-client-app</a>
    </h1>
    <p class=\\"header-subtitle\\">using the
      <a href=\\"https://github.com/algolia/algoliasearch-client-javascript\\">Algolia Search API Client for JavaScript</a>
    </p>
  </header>

  <div class=\\"container\\">
    <div class=\\"container-app\\">
      <div class=\\"filters\\"></div>

      <div class=\\"search-container\\">
        <div id=\\"searchBox\\">
          <form role=\\"search\\">
            <input type=\\"search\\" placeholder=\\"Search placeholder\\" />
          </form>
        </div>
        <div id=\\"hits\\"></div>
      </div>
    </div>
  </div>

  <script src=\\"./src/app.js\\"></script>
</body>

</html>"
`;

exports[`Templates JavaScript Client File content: manifest.webmanifest 1`] = `
"{
  \\"short_name\\": \\"javascript-client-app\\",
  \\"name\\": \\"javascript-client-app Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"./index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates JavaScript Client File content: package.json 1`] = `
"{
  \\"name\\": \\"javascript-client-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"start\\": \\"parcel index.html --port 3000\\",
    \\"build\\": \\"parcel build index.html\\",
    \\"lint\\": \\"eslint .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"dependencies\\": {
    \\"algoliasearch\\": \\"1.0.0\\"
  },
  \\"devDependencies\\": {
    \\"babel-eslint\\": \\"8.2.5\\",
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"parcel-bundler\\": \\"1.9.4\\",
    \\"prettier\\": \\"1.13.7\\"
  }
}"
`;

exports[`Templates JavaScript Client File content: src/app.css 1`] = `
"em {
  background: cyan;
  font-style: normal;
}

.header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(73deg, #3369e7, #1cc7d0);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.container-app {
  display: grid;
}

#searchBox input[type=\\"search\\"] {
  width: 100%;
  padding: 12px;
  font: inherit;
  border-radius: 2px;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.16);
}

.ais-hits {
  display: grid;
  grid-template-columns: 49% 49%;
  grid-gap: 2%;
  list-style: none;
  padding: 0;
  margin: 0;
}

.ais-hits--item {
  min-height: 100px;
  padding: 1rem;
  background: #fff;
  border-radius: 4px;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.16);
  margin-bottom: 1rem;
}

#searchBox {
  margin-bottom: 2rem;
}"
`;

exports[`Templates JavaScript Client File content: src/app.js 1`] = `
"import algoliasearch from 'algoliasearch';

const client = algoliasearch('appId', 'apiKey');
const index = client.initIndex('indexName');

const $searchBox = document.querySelector('#searchBox input[type=search]');
const $hits = document.querySelector('#hits');

function renderHits(query) {
  index.search(query).then(result => {
    // Please sanitize user-provided data when using \`innerHTML\` to avoid XSS
    $hits.innerHTML = \`
      <ul class=\\"ais-hits\\">
        \${result.hits
          .map(hit => \`<li class=\\"ais-hits--item\\">\${hit._highlightResult.mainAttribute.value}</li>\`)
          .join('')}
      </ul>\`;
  });
}

$searchBox.addEventListener('input', event => {
  const query = event.target.value;

  renderHits(query);
});

document.addEventListener('DOMContentLoaded', () => {
  renderHits('');
});"
`;

exports[`Templates JavaScript Client File content: src/index.css 1`] = `
"body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}"
`;

exports[`Templates JavaScript Client Folder structure: contains the right files 1`] = `
Array [
  ".editorconfig",
  ".eslintignore",
  ".eslintrc.js",
  ".gitignore",
  ".prettierrc",
  "README.md",
  "favicon.png",
  "index.html",
  "manifest.webmanifest",
  "package.json",
  "src/app.css",
  "src/app.js",
  "src/index.css",
]
`;

exports[`Templates JavaScript Helper File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates JavaScript Helper File content: .eslintignore 1`] = `
"/node_modules
/dist
/.cache"
`;

exports[`Templates JavaScript Helper File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia',
};"
`;

exports[`Templates JavaScript Helper File content: .gitignore 1`] = `
"# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules

# testing
/coverage

# production
/dist
/.cache

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*"
`;

exports[`Templates JavaScript Helper File content: .prettierrc 1`] = `
"{
  \\"singleQuote\\": true,
  \\"proseWrap\\": \\"never\\",
  \\"trailingComma\\": \\"es5\\"
}"
`;

exports[`Templates JavaScript Helper File content: README.md 1`] = `
"# javascript-helper-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates JavaScript Helper File content: index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"./manifest.webmanifest\\">
  <link rel=\\"shortcut icon\\" href=\\"./favicon.png\\">

  <link rel=\\"stylesheet\\" href=\\"./src/index.css\\">
  <link rel=\\"stylesheet\\" href=\\"./src/app.css\\">

  <title>javascript-helper-app</title>
</head>

<body>
  <header class=\\"header\\">
    <h1 class=\\"header-title\\">
      <a href=\\"/\\">javascript-helper-app</a>
    </h1>
    <p class=\\"header-subtitle\\">using the
      <a href=\\"https://github.com/algolia/algoliasearch-helper-js\\">Algolia Search Helper for JavaScript</a>
    </p>
  </header>

  <div class=\\"container\\">
    <div class=\\"container-app\\">
      <div id=\\"searchBox\\">
        <form role=\\"search\\">
          <input type=\\"search\\" placeholder=\\"Search placeholder\\" />
        </form>
      </div>
      <div id=\\"hits\\"></div>
    </div>
  </div>

  <script src=\\"./src/app.js\\"></script>
</body>

</html>"
`;

exports[`Templates JavaScript Helper File content: manifest.webmanifest 1`] = `
"{
  \\"short_name\\": \\"javascript-helper-app\\",
  \\"name\\": \\"javascript-helper-app Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"./index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates JavaScript Helper File content: package.json 1`] = `
"{
  \\"name\\": \\"javascript-helper-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"start\\": \\"parcel index.html --port 3000\\",
    \\"build\\": \\"parcel build index.html\\",
    \\"lint\\": \\"eslint .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"dependencies\\": {
    \\"algoliasearch\\": \\"3.29.0\\",
    \\"algoliasearch-helper\\": \\"^1.0.0\\"
  },
  \\"devDependencies\\": {
    \\"babel-eslint\\": \\"8.2.5\\",
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"parcel-bundler\\": \\"1.9.4\\",
    \\"prettier\\": \\"1.13.7\\"
  }
}"
`;

exports[`Templates JavaScript Helper File content: src/app.css 1`] = `
"em {
  background: cyan;
  font-style: normal;
}

.header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(73deg, #3369e7, #1cc7d0);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.container-app {
  display: grid;
}

#searchBox input[type=\\"search\\"] {
  width: 100%;
  padding: 12px;
  font: inherit;
  border-radius: 2px;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.16);
}

.ais-hits {
  display: grid;
  grid-template-columns: 49% 49%;
  grid-gap: 2%;
  list-style: none;
  padding: 0;
  margin: 0;
}

.ais-hits--item {
  min-height: 100px;
  padding: 1rem;
  background: #fff;
  border-radius: 4px;
  border: 1px solid rgba(150, 150, 150, 0.16);
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.16);
  margin-bottom: 1rem;
}

#searchBox {
  margin-bottom: 2rem;
}"
`;

exports[`Templates JavaScript Helper File content: src/app.js 1`] = `
"import algoliasearch from 'algoliasearch';
import algoliasearchHelper from 'algoliasearch-helper';

const client = algoliasearch('appId', 'apiKey');
const helper = algoliasearchHelper(client, 'indexName');

const $searchBox = document.querySelector('#searchBox input[type=search]');
const $hits = document.querySelector('#hits');

$searchBox.addEventListener('input', event => {
  const query = event.target.value;

  helper.setQuery(query).search();
});

helper.on('result', result => {
  // Please sanitize user-provided data when using \`innerHTML\` to avoid XSS
  $hits.innerHTML = \`
    <ul class=\\"ais-hits\\">
      \${result.hits
        .map(hit => \`<li class=\\"ais-hits--item\\">\${hit._highlightResult.mainAttribute.value}</li>\`)
        .join('')}
    </ul>\`;
});

helper.search();"
`;

exports[`Templates JavaScript Helper File content: src/index.css 1`] = `
"body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}"
`;

exports[`Templates JavaScript Helper Folder structure: contains the right files 1`] = `
Array [
  ".editorconfig",
  ".eslintignore",
  ".eslintrc.js",
  ".gitignore",
  ".prettierrc",
  "README.md",
  "favicon.png",
  "index.html",
  "manifest.webmanifest",
  "package.json",
  "src/app.css",
  "src/app.js",
  "src/index.css",
]
`;

exports[`Templates React InstantSearch File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates React InstantSearch File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia/react',
};"
`;

exports[`Templates React InstantSearch File content: .gitignore 1`] = `
"# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*"
`;

exports[`Templates React InstantSearch File content: .prettierrc 1`] = `
"{
  \\"singleQuote\\": true,
  \\"proseWrap\\": \\"never\\",
  \\"trailingComma\\": \\"es5\\"
}"
`;

exports[`Templates React InstantSearch File content: README.md 1`] = `
"# react-instantsearch-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates React InstantSearch File content: package.json 1`] = `
"{
  \\"name\\": \\"react-instantsearch-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"start\\": \\"react-scripts start\\",
    \\"build\\": \\"react-scripts build\\",
    \\"lint\\": \\"eslint .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"dependencies\\": {
    \\"react\\": \\"16.4.1\\",
    \\"react-dom\\": \\"16.4.1\\",
    \\"react-instantsearch-dom\\": \\"1.0.0\\",
    \\"react-scripts\\": \\"1.1.4\\"
  },
  \\"devDependencies\\": {
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"eslint-plugin-react\\": \\"7.10.0\\",
    \\"prettier\\": \\"1.13.5\\",
    \\"prop-types\\": \\"15.6.2\\"
  }
}"
`;

exports[`Templates React InstantSearch File content: public/index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"%PUBLIC_URL%/manifest.json\\">
  <link rel=\\"shortcut icon\\" href=\\"%PUBLIC_URL%/favicon.png\\">

  <!--
    Do not use @7 in production, use a complete version like x.x.x, see website for latest version:
    https://community.algolia.com/react-instantsearch/Getting_started.html#load-the-algolia-theme
  -->
  <link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/instantsearch.css@7/themes/algolia-min.css\\">

  <title>react-instantsearch-app</title>
</head>

<body>
  <noscript>
    You need to enable JavaScript to run this app.
  </noscript>

  <div id=\\"root\\"></div>
</body>

</html>"
`;

exports[`Templates React InstantSearch File content: public/manifest.json 1`] = `
"{
  \\"short_name\\": \\"react-instantsearch-app\\",
  \\"name\\": \\"react-instantsearch-app Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"./index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates React InstantSearch File content: src/App.css 1`] = `
"em {
  background: cyan;
  font-style: normal;
}

.header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(to right, #8e43e7, #00aeff);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.search-panel {
  display: flex;
}

.search-panel__filters {
  flex: 1;
}

.search-panel__results {
  flex: 3;
}

.searchbox {
  margin-bottom: 2rem;
}

.pagination {
  margin: 2rem auto;
  text-align: center;
}"
`;

exports[`Templates React InstantSearch File content: src/App.js 1`] = `
"import React, { Component } from 'react';
import {
  InstantSearch,
  Hits,
  SearchBox,
  RefinementList,
  Pagination,
  Highlight,
} from 'react-instantsearch-dom';
import PropTypes from 'prop-types';
import './App.css';

class App extends Component {
  render() {
    return (
      <div>
        <header className=\\"header\\">
          <h1 className=\\"header-title\\">
            <a href=\\"/\\">react-instantsearch-app</a>
          </h1>
          <p className=\\"header-subtitle\\">
            using{' '}
            <a href=\\"https://github.com/algolia/react-instantsearch\\">
              React InstantSearch
            </a>
          </p>
        </header>

        <div className=\\"container\\">
          <InstantSearch
            appId=\\"appId\\"
            apiKey=\\"apiKey\\"
            indexName=\\"indexName\\"
          >
            <div className=\\"search-panel\\">
              <div className=\\"search-panel__filters\\">
                <RefinementList attribute=\\"facet1\\" />
                <RefinementList attribute=\\"facet2\\" />
              </div>

              <div className=\\"search-panel__results\\">
                <SearchBox className=\\"searchbox\\" placeholder=\\"Search placeholder\\" />
                <Hits hitComponent={Hit} />

                <div className=\\"pagination\\">
                  <Pagination />
                </div>
              </div>
            </div>
          </InstantSearch>
        </div>
      </div>
    );
  }
}

function Hit(props) {
  return (
    <div>
      <Highlight attribute=\\"mainAttribute\\" hit={props.hit} />
    </div>
  );
}

Hit.propTypes = {
  hit: PropTypes.object.isRequired,
};

export default App;"
`;

exports[`Templates React InstantSearch File content: src/index.css 1`] = `
"body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}"
`;

exports[`Templates React InstantSearch File content: src/index.js 1`] = `
"import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';

ReactDOM.render(<App />, document.getElementById('root'));"
`;

exports[`Templates React InstantSearch Folder structure: contains the right files 1`] = `
Array [
  ".editorconfig",
  ".eslintrc.js",
  ".gitignore",
  ".prettierrc",
  "README.md",
  "package.json",
  "public/favicon.png",
  "public/index.html",
  "public/manifest.json",
  "src/App.css",
  "src/App.js",
  "src/index.css",
  "src/index.js",
]
`;

exports[`Templates React InstantSearch Native File content: .babelrc 1`] = `
"{
  \\"presets\\": [\\"babel-preset-expo\\"],
  \\"env\\": {
    \\"development\\": {
      \\"plugins\\": [\\"transform-react-jsx-source\\"]
    }
  }
}"
`;

exports[`Templates React InstantSearch Native File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates React InstantSearch Native File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia/react',
};"
`;

exports[`Templates React InstantSearch Native File content: .gitignore 1`] = `
"# See https://help.github.com/ignore-files/ for more about ignoring files.

# expo
.expo/

# dependencies
/node_modules

# misc
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*"
`;

exports[`Templates React InstantSearch Native File content: .prettierrc 1`] = `
"{
  \\"singleQuote\\": true,
  \\"proseWrap\\": \\"never\\",
  \\"trailingComma\\": \\"es5\\"
}"
`;

exports[`Templates React InstantSearch Native File content: .watchmanconfig 1`] = `"{}"`;

exports[`Templates React InstantSearch Native File content: App.js 1`] = `
"import React from 'react';
import { StyleSheet, View, SafeAreaView, StatusBar } from 'react-native';
import algoliasearch from 'algoliasearch/reactnative';
import { InstantSearch } from 'react-instantsearch-native';
import SearchBox from './src/SearchBox';
import InfiniteHits from './src/InfiniteHits';

const searchClient = algoliasearch(
  'appId',
  'apiKey'
);

const styles = StyleSheet.create({
  safe: {
    flex: 1,
    backgroundColor: '#252b33',
  },
  container: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
});

class App extends React.Component {
  root = {
    Root: View,
    props: {
      style: {
        flex: 1,
      },
    },
  };

  render() {
    return (
      <SafeAreaView style={styles.safe}>
        <StatusBar barStyle=\\"light-content\\" />
        <View style={styles.container}>
          <InstantSearch
            searchClient={searchClient}
            indexName=\\"indexName\\"
            root={this.root}
          >
            <SearchBox />
            <InfiniteHits />
          </InstantSearch>
        </View>
      </SafeAreaView>
    );
  }
}

export default App;"
`;

exports[`Templates React InstantSearch Native File content: README.md 1`] = `
"# react-instantsearch-native-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates React InstantSearch Native File content: app.json 1`] = `
"{
  \\"expo\\": {
    \\"sdkVersion\\": \\"27.0.0\\"
  }
}"
`;

exports[`Templates React InstantSearch Native File content: package.json 1`] = `
"{
  \\"name\\": \\"react-instantsearch-native-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"main\\": \\"./node_modules/react-native-scripts/build/bin/crna-entry.js\\",
  \\"scripts\\": {
    \\"start\\": \\"react-native-scripts start\\",
    \\"android\\": \\"react-native-scripts android\\",
    \\"ios\\": \\"react-native-scripts ios\\",
    \\"lint\\": \\"eslint .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"dependencies\\": {
    \\"algoliasearch\\": \\"3.29.0\\",
    \\"expo\\": \\"27.1.0\\",
    \\"prop-types\\": \\"15.6.2\\",
    \\"react\\": \\"16.3.1\\",
    \\"react-instantsearch-native\\": \\"1.0.0\\",
    \\"react-native\\": \\"0.55.4\\"
  },
  \\"devDependencies\\": {
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"eslint-plugin-react\\": \\"7.10.0\\",
    \\"prettier\\": \\"1.13.5\\",
    \\"react-native-scripts\\": \\"1.14.0\\"
  }
}"
`;

exports[`Templates React InstantSearch Native File content: src/Highlight.js 1`] = `
"import React from 'react';
import { Text } from 'react-native';
import PropTypes from 'prop-types';
import { connectHighlight } from 'react-instantsearch-native';

const Highlight = ({ attribute, hit, highlight }) => {
  const highlights = highlight({
    highlightProperty: '_highlightResult',
    attribute,
    hit,
  });

  return (
    <Text>
      {highlights.map(({ value, isHighlighted }, index) => {
        const style = {
          backgroundColor: isHighlighted ? 'yellow' : 'transparent',
        };

        return (
          <Text key={index} style={style}>
            {value}
          </Text>
        );
      })}
    </Text>
  );
};

Highlight.propTypes = {
  attribute: PropTypes.string.isRequired,
  hit: PropTypes.object.isRequired,
  highlight: PropTypes.func.isRequired,
};

export default connectHighlight(Highlight);"
`;

exports[`Templates React InstantSearch Native File content: src/InfiniteHits.js 1`] = `
"import React from 'react';
import { StyleSheet, View, FlatList } from 'react-native';
import PropTypes from 'prop-types';
import { connectInfiniteHits } from 'react-instantsearch-native';
import Highlight from './Highlight';

const styles = StyleSheet.create({
  separator: {
    borderBottomWidth: 1,
  },
  item: {
    padding: 10,
    flexDirection: 'row',
    alignItems: 'center',
  },
});

const InfiniteHits = ({ hits, hasMore, refine }) => (
  <FlatList
    data={hits}
    keyExtractor={item => item.objectID}
    ItemSeparatorComponent={() => <View style={styles.separator} />}
    onEndReached={() => hasMore && refine()}
    renderItem={({ item }) => (
      <View style={styles.item}>
        <Highlight attribute=\\"mainAttribute\\" hit={item} />
      </View>
    )}
  />
);

InfiniteHits.propTypes = {
  hits: PropTypes.arrayOf(PropTypes.object).isRequired,
  hasMore: PropTypes.bool.isRequired,
  refine: PropTypes.func.isRequired,
};

export default connectInfiniteHits(InfiniteHits);"
`;

exports[`Templates React InstantSearch Native File content: src/SearchBox.js 1`] = `
"import React from 'react';
import { StyleSheet, View, TextInput } from 'react-native';
import PropTypes from 'prop-types';
import { connectSearchBox } from 'react-instantsearch-native';

const styles = StyleSheet.create({
  container: {
    padding: 10,
    backgroundColor: '#252b33',
  },
  input: {
    height: 40,
    padding: 10,
    backgroundColor: '#FFFFFF',
  },
});

const SearchBox = ({ currentRefinement, refine }) => (
  <View style={styles.container}>
    <TextInput
      style={styles.input}
      onChangeText={value => refine(value)}
      value={currentRefinement}
      placeholder=\\"Search placeholder\\"
    />
  </View>
);

SearchBox.propTypes = {
  currentRefinement: PropTypes.string.isRequired,
  refine: PropTypes.func.isRequired,
};

export default connectSearchBox(SearchBox);"
`;

exports[`Templates React InstantSearch Native Folder structure: contains the right files 1`] = `
Array [
  ".babelrc",
  ".editorconfig",
  ".eslintrc.js",
  ".gitignore",
  ".prettierrc",
  ".watchmanconfig",
  "App.js",
  "README.md",
  "app.json",
  "package.json",
  "src/Highlight.js",
  "src/InfiniteHits.js",
  "src/SearchBox.js",
]
`;

exports[`Templates Vue InstantSearch File content: .babelrc 1`] = `
"{
  \\"presets\\": [
    [\\"env\\", { \\"modules\\": false }],
    \\"stage-3\\"
  ]
}"
`;

exports[`Templates Vue InstantSearch File content: .editorconfig 1`] = `
"root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true"
`;

exports[`Templates Vue InstantSearch File content: .eslintrc.js 1`] = `
"module.exports = {
  extends: 'algolia/vue',
  rules: {
    'import/no-commonjs': 'off',
  },
};"
`;

exports[`Templates Vue InstantSearch File content: .gitignore 1`] = `
"node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log
dist/"
`;

exports[`Templates Vue InstantSearch File content: README.md 1`] = `
"# vue-instantsearch-app

_This project was generated with [create-instantsearch-app](https://github.com/algolia/create-instantsearch-app) by [Algolia](https://algolia.com)._

## Get started

To run this project locally, install the dependencies and run the local server:

\`\`\`sh
npm install
npm start
\`\`\`

Alternatively, you may use [Yarn](https://http://yarnpkg.com/):

\`\`\`sh
yarn
yarn start
\`\`\`"
`;

exports[`Templates Vue InstantSearch File content: index.html 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">

<head>
  <meta charset=\\"utf-8\\">
  <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, shrink-to-fit=no\\">
  <meta name=\\"theme-color\\" content=\\"#000000\\">

  <link rel=\\"manifest\\" href=\\"manifest.json\\">
  <link rel=\\"shortcut icon\\" href=\\"favicon.png\\">

  <!--
    Do not use @7 in production, use a complete version like x.x.x, see website for latest version:
    https://community.algolia.com/react-instantsearch/Getting_started.html#load-the-algolia-theme
  -->
  <link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/instantsearch.css@7/themes/algolia-min.css\\">

  <title>vue-instantsearch-app</title>
</head>

<body>
  <noscript>
    You need to enable JavaScript to run this app.
  </noscript>

  <div id=\\"app\\"></div>

  <script src=\\"/dist/build.js\\"></script>
</body>

</html>"
`;

exports[`Templates Vue InstantSearch File content: manifest.json 1`] = `
"{
  \\"short_name\\": \\"vue-instantsearch-app\\",
  \\"name\\": \\"vue-instantsearch-app Sample\\",
  \\"icons\\": [
    {
      \\"src\\": \\"favicon.png\\",
      \\"sizes\\": \\"64x64 32x32 24x24 16x16\\",
      \\"type\\": \\"image/x-icon\\"
    }
  ],
  \\"start_url\\": \\"./index.html\\",
  \\"display\\": \\"standalone\\",
  \\"theme_color\\": \\"#000000\\",
  \\"background_color\\": \\"#ffffff\\"
}"
`;

exports[`Templates Vue InstantSearch File content: package.json 1`] = `
"{
  \\"name\\": \\"vue-instantsearch-app\\",
  \\"version\\": \\"1.0.0\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"start\\": \\"cross-env NODE_ENV=development webpack-dev-server --port 3000 --hot\\",
    \\"build\\": \\"cross-env NODE_ENV=production webpack --progress --hide-modules\\",
    \\"lint\\": \\"eslint --ext .js,.vue .\\",
    \\"lint:fix\\": \\"npm run lint -- --fix\\"
  },
  \\"dependencies\\": {
    \\"vue\\": \\"2.5.16\\",
    \\"vue-instantsearch\\": \\"1.0.0\\"
  },
  \\"devDependencies\\": {
    \\"babel-core\\": \\"6.26.0\\",
    \\"babel-eslint\\": \\"8.2.5\\",
    \\"babel-loader\\": \\"7.1.4\\",
    \\"babel-preset-env\\": \\"1.6.1\\",
    \\"babel-preset-stage-3\\": \\"6.24.1\\",
    \\"cross-env\\": \\"5.1.4\\",
    \\"css-loader\\": \\"0.28.11\\",
    \\"eslint\\": \\"4.19.1\\",
    \\"eslint-config-algolia\\": \\"13.1.0\\",
    \\"eslint-config-prettier\\": \\"2.9.0\\",
    \\"eslint-plugin-html\\": \\"4.0.5\\",
    \\"eslint-plugin-import\\": \\"2.13.0\\",
    \\"eslint-plugin-prettier\\": \\"2.6.1\\",
    \\"file-loader\\": \\"1.1.11\\",
    \\"prettier\\": \\"1.13.5\\",
    \\"vue-loader\\": \\"14.2.2\\",
    \\"vue-template-compiler\\": \\"2.5.16\\",
    \\"webpack\\": \\"3.11.0\\",
    \\"webpack-dev-server\\": \\"2.11.2\\"
  }
}"
`;

exports[`Templates Vue InstantSearch File content: src/App.vue 1`] = `
"<template>
  <div>
    <header class=\\"header\\">
      <h1 class=\\"header-title\\">
        <a href=\\"/\\">vue-instantsearch-app</a>
      </h1>
      <p class=\\"header-subtitle\\">
        using
        <a href=\\"https://github.com/algolia/vue-instantsearch\\">
          Vue InstantSearch
        </a>
      </p>
    </header>

    <div class=\\"container\\">
      <ais-index
        app-id=\\"appId\\"
        api-key=\\"apiKey\\"
        index-name=\\"indexName\\"
      >
        <div class=\\"search-panel\\">
          <div class=\\"search-panel__filters\\">
            <ais-refinement-list attribute-name=\\"facet1\\"></ais-refinement-list>
            <ais-refinement-list attribute-name=\\"facet2\\"></ais-refinement-list>
          </div>

          <div class=\\"search-panel__results\\">
            <ais-search-box
              placeholder=\\"Search placeholder\\"
              class=\\"ais-SearchBox-form\\"
              :class-names=\\"{
                'ais-search-box': 'ais-SearchBox',
                'ais-input': 'ais-SearchBox-input',
                'ais-clear': 'ais-SearchBox-reset',
                'ais-clear--disabled': 'ais-SearchBox-reset--disabled',
                'ais-search-box__submit': 'ais-SearchBox-submit',
                'ais-search-box__loading-indicator': 'ais-SearchBox-loadingIndicator',
              }\\"
            ></ais-search-box>

            <ais-results class=\\"ais-Hits-list\\">
              <template slot-scope=\\"{ result }\\">
                <div class=\\"ais-Hits-item\\">
                  <ais-highlight :result=\\"result\\" attribute-name=\\"mainAttribute\\"></ais-highlight>
                </div>
              </template>
            </ais-results>

            <div class=\\"pagination\\">
              <ais-pagination
                :class-names=\\"{
                  'ais-pagination': 'ais-Pagination-list',
                  'ais-pagination__item': 'ais-Pagination-item',
                  'ais-pagination__item--next': 'ais-Pagination-item--next',
                  'ais-pagination__item--previous': 'ais-Pagination-item--previous',
                  'ais-pagination__item--disabled': 'ais-Pagination-item--disabled',
                  'ais-pagination__item--first': 'ais-Pagination-item--first',
                  'ais-pagination__item--last': 'ais-Pagination-item--last',
                  'ais-pagination__link': 'ais-Pagination-link',
                }\\"
              ></ais-pagination>
            </div>
          </div>
        </div>
      </ais-index>
    </div>
  </div>
</template>

<style>
body,
h1 {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

em {
  background: cyan;
  font-style: normal;
}

.header {
  display: flex;
  align-items: center;
  min-height: 50px;
  padding: 0.5rem 1rem;
  background-image: linear-gradient(to right, #4dba87, #2f9088);
  color: #fff;
  margin-bottom: 1rem;
}

.header a {
  color: #fff;
  text-decoration: none;
}

.header-title {
  font-size: 1.2rem;
  font-weight: normal;
}

.header-title::after {
  content: ' â–¸ ';
  padding: 0 0.5rem;
}

.header-subtitle {
  font-size: 1.2rem;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.search-panel {
  display: flex;
}

.search-panel__filters {
  flex: 1;
}

.search-panel__results {
  flex: 3;
}

.searchbox {
  margin-bottom: 2rem;
}

.pagination {
  margin: 2rem auto;
  text-align: center;
}
</style>"
`;

exports[`Templates Vue InstantSearch File content: src/main.js 1`] = `
"import Vue from 'vue';
import App from './App.vue';
import InstantSearch from 'vue-instantsearch';

Vue.use(InstantSearch);

new Vue({
  el: '#app',
  render: h => h(App),
});"
`;

exports[`Templates Vue InstantSearch File content: webpack.config.js 1`] = `
"const path = require('path');
const webpack = require('webpack');

module.exports = {
  entry: './src/main.js',
  output: {
    path: path.resolve(__dirname, './dist'),
    publicPath: '/dist/',
    filename: 'build.js',
  },
  module: {
    rules: [
      {
        test: /\\\\.css$/,
        use: ['vue-style-loader', 'css-loader'],
      },
      {
        test: /\\\\.vue$/,
        loader: 'vue-loader',
        options: {
          loaders: {},
          // other vue-loader options go here
        },
      },
      {
        test: /\\\\.js$/,
        loader: 'babel-loader',
        exclude: /node_modules/,
      },
      {
        test: /\\\\.(png|jpg|gif|svg)$/,
        loader: 'file-loader',
        options: {
          name: '[name].[ext]?[hash]',
        },
      },
    ],
  },
  resolve: {
    alias: {
      vue$: 'vue/dist/vue.esm.js',
    },
    extensions: ['*', '.js', '.vue', '.json'],
  },
  devServer: {
    historyApiFallback: true,
    noInfo: true,
    overlay: true,
    port: 3000,
  },
  performance: {
    hints: false,
  },
  devtool: '#eval-source-map',
};

if (process.env.NODE_ENV === 'production') {
  module.exports.devtool = '#source-map';
  // http://vue-loader.vuejs.org/en/workflow/production.html
  module.exports.plugins = (module.exports.plugins || []).concat([
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: '\\"production\\"',
      },
    }),
    new webpack.optimize.UglifyJsPlugin({
      sourceMap: true,
      compress: {
        warnings: false,
      },
    }),
    new webpack.LoaderOptionsPlugin({
      minimize: true,
    }),
  ]);
}"
`;

exports[`Templates Vue InstantSearch Folder structure: contains the right files 1`] = `
Array [
  ".babelrc",
  ".editorconfig",
  ".eslintrc.js",
  ".gitignore",
  "README.md",
  "favicon.png",
  "index.html",
  "manifest.json",
  "package.json",
  "src/App.vue",
  "src/main.js",
  "webpack.config.js",
]
`;
